#!/usr/bin/env python
#from tracemalloc import start
from cmath import sqrt
import rospy
from geometry_msgs.msg import Pose, Point, Quaternion, PoseArray, PoseStamped
from sensor_msgs.msg import LaserScan
import cvxpy as cp
import numpy as np
import sympy
from nav_msgs.msg import Odometry
from ackermann_msgs.msg import AckermannDriveStamped
from collections import deque
from sensor_msgs.msg import LaserScan
#from SumOfSquares import SOSProblem, poly_opt_prob
#import matplotlib.pyplot as plt
from scipy.spatial import ConvexHull, convex_hull_plot_2d
import math
import high_level_main
from std_msgs.msg import Header


class Barrier_control(object):

    def __init__(self):
        ## high level parameters
        self.high_level = high_level_main.high_level_plan()
        
        ## all the subscribers and publishers
        rospy.Subscriber("odom",Odometry,self.high_level_callback,queue_size=1)
        rospy.Subscriber("odom",Odometry,self.low_level_callback,queue_size=1)
        rospy.Subscriber("odom",Odometry,self.ApplyControl,queue_size = 1)

        self.drive_control_pub = rospy.Publisher("drive",AckermannDriveStamped,queue_size=1)


        ## parameters
        self.optimal_steering = np.array([-45*np.pi/180,-20*np.pi/180,0,20*np.pi/180,45*np.pi/180])

        self.obstacle_data = np.array([[-10.820,0.320],[-8.296,-0.397]])
        self.obstacle_num = 5
        
        
        self.detect_radius = 1.6
        self.speed = 1.0
        self.steer_index = 2

        #self.obstacle1_optional_steer = False
        #self.obstacle2_optional_steer = False
        #self.obstacle3_optional_steer = False

        #self.old_prime_index = 6


        ## control logic parameter
        self.go_straight = False
        self.slight_left = False
        self.slight_right = False


        self.primal_available = True
        self.new_priority_available = False

        self.old_priority_index = 5

        self.close_index = 5



        ## control logic
        self.obstacle1_high_once = False
        self.obstacle1_low_once = False
        self.obstacle2_high_once = False
        self.obstacle2_low_once = False
        self.time_to_switch = False





    def high_level_callback(self,odom_msg):
        ## visualize the centerline and trajectory
        self.high_level.visualize_centerline()
        self.high_level.visualize_trajectory()

        self.high_level.car_pos_x = odom_msg.pose.pose.position.x
        self.high_level.car_pos_y = odom_msg.pose.pose.position.y
        qx = odom_msg.pose.pose.orientation.x
        qy = odom_msg.pose.pose.orientation.y
        qz = odom_msg.pose.pose.orientation.z
        qw = odom_msg.pose.pose.orientation.w

        roll_x,pitch_y,yaw_z = self.high_level.euler_from_quaternion(qx,qy,qz,qw)

        self.high_level.yaw_ = yaw_z
        self.high_level.select_trajectory()
        self.high_level.visualize_max_trajectory()



    def low_level_callback(self,odom_msg):
        car_pos_x = odom_msg.pose.pose.position.x
        car_pos_y = odom_msg.pose.pose.position.y

        qx = odom_msg.pose.pose.orientation.x
        qy = odom_msg.pose.pose.orientation.y
        qz = odom_msg.pose.pose.orientation.z
        qw = odom_msg.pose.pose.orientation.w

        roll_x,pitch_y,yaw_z = self.high_level.euler_from_quaternion(qx,qy,qz,qw)
        self.SOS_barrier(car_pos_x,car_pos_y,yaw_z)



    def solve_obstacle_1(self,car_x,car_y,yaw_z,direction):
        Q = cp.Variable((10,10), symmetric=False)
        G = cp.Variable((10,10), symmetric=True)
        M = cp.Variable((10,10), symmetric = True)
        J = cp.Variable((4,4), symmetric = True)

        constraints = [G >> 0]
        constraints += [M >> 0]
        constraints += [J >> 0]

        x_0 = car_x
        y_0 = car_y
        p_0 = yaw_z

        b_0 = np.array([[1,x_0,y_0,p_0,x_0**2,x_0*y_0,y_0**2,x_0*p_0,y_0*p_0,p_0**2]]).transpose()
        constraints += [b_0.T @ Q @ b_0 == 0]

        if direction == 1:
            constraints += [-3.0*Q[0, 1] + 3.11974486513888*Q[0, 3]==G[0, 0],-3.0*Q[0, 2] - 3.0*Q[0, 7] + 6.23948973027775*Q[0, 9] - 3.0*Q[3, 1] + 3.11974486513888*Q[3, 3]==G[0, 3] + G[3, 0],1.5*Q[0, 1] - 3.0*Q[0, 8] - 3.0*Q[3, 2] - 3.0*Q[3, 7] + 6.23948973027775*Q[3, 9] - 3.0*Q[9, 1] + 3.11974486513888*Q[9, 3]==G[0, 9] + G[3, 3] + G[9, 0],0.5*Q[0, 2] + 1.5*Q[0, 7] + 1.5*Q[3, 1] - 3.0*Q[3, 8] - 3.0*Q[9, 2] - 3.0*Q[9, 7] + 6.23948973027775*Q[9, 9]==G[3, 9] + G[9, 3],0.5*Q[0, 8] + 0.5*Q[3, 2] + 1.5*Q[3, 7] + 1.5*Q[9, 1] - 3.0*Q[9, 8]==G[9, 9],0.5*Q[3, 8] + 0.5*Q[9, 2] + 1.5*Q[9, 7]==0.,0.5*Q[9, 8]==0.,-3.0*Q[0, 5] + 3.11974486513888*Q[0, 8] - 3.0*Q[2, 1] + 3.11974486513888*Q[2, 3]==G[0, 2] + G[2, 0],-6.0*Q[0, 6] - 3.0*Q[2, 2] - 3.0*Q[2, 7] + 6.23948973027775*Q[2, 9] - 3.0*Q[3, 5] + 3.11974486513888*Q[3, 8] - 3.0*Q[8, 1] + 3.11974486513888*Q[8, 3]==G[0, 8] + G[2, 3] + G[3, 2] + G[8, 0],1.5*Q[0, 5] + 1.5*Q[2, 1] - 3.0*Q[2, 8] - 6.0*Q[3, 6] - 3.0*Q[8, 2] - 3.0*Q[8, 7] + 6.23948973027775*Q[8, 9] - 3.0*Q[9, 5] + 3.11974486513888*Q[9, 8]==G[2, 9] + G[3, 8] + G[8, 3] + G[9, 2],1.0*Q[0, 6] + 0.5*Q[2, 2] + 1.5*Q[2, 7] + 1.5*Q[3, 5] + 1.5*Q[8, 1] - 3.0*Q[8, 8] - 6.0*Q[9, 6]==G[8, 9] + G[9, 8],0.5*Q[2, 8] + 1.0*Q[3, 6] + 0.5*Q[8, 2] + 1.5*Q[8, 7] + 1.5*Q[9, 5]==0.,0.5*Q[8, 8] + 1.0*Q[9, 6]==0.,-3.0*Q[2, 5] + 3.11974486513888*Q[2, 8] - 3.0*Q[6, 1] + 3.11974486513888*Q[6, 3]==G[0, 6] + G[2, 2] + G[6, 0],-6.0*Q[2, 6] - 3.0*Q[6, 2] - 3.0*Q[6, 7] + 6.23948973027775*Q[6, 9] - 3.0*Q[8, 5] + 3.11974486513888*Q[8, 8]==G[2, 8] + G[3, 6] + G[6, 3] + G[8, 2],1.5*Q[2, 5] + 1.5*Q[6, 1] - 3.0*Q[6, 8] - 6.0*Q[8, 6]==G[6, 9] + G[8, 8] + G[9, 6],1.0*Q[2, 6] + 0.5*Q[6, 2] + 1.5*Q[6, 7] + 1.5*Q[8, 5]==0.,0.5*Q[6, 8] + 1.0*Q[8, 6]==0.,-3.0*Q[6, 5] + 3.11974486513888*Q[6, 8]==G[2, 6] + G[6, 2],-6.0*Q[6, 6]==G[6, 8] + G[8, 6],1.5*Q[6, 5]==0.,1.0*Q[6, 6]==0.,G[6, 6]==0.,-6.0*Q[0, 4] + 3.11974486513888*Q[0, 7] - 3.0*Q[1, 1] + 3.11974486513888*Q[1, 3]==G[0, 1] + G[1, 0],-3.0*Q[0, 5] - 3.0*Q[1, 2] - 3.0*Q[1, 7] + 6.23948973027775*Q[1, 9] - 6.0*Q[3, 4] + 3.11974486513888*Q[3, 7] - 3.0*Q[7, 1] + 3.11974486513888*Q[7, 3]==G[0, 7] + G[1, 3] + G[3, 1] + G[7, 0],3.0*Q[0, 4] + 1.5*Q[1, 1] - 3.0*Q[1, 8] - 3.0*Q[3, 5] - 3.0*Q[7, 2] - 3.0*Q[7, 7] + 6.23948973027775*Q[7, 9] - 6.0*Q[9, 4] + 3.11974486513888*Q[9, 7]==G[1, 9] + G[3, 7] + G[7, 3] + G[9, 1],0.5*Q[0, 5] + 0.5*Q[1, 2] + 1.5*Q[1, 7] + 3.0*Q[3, 4] + 1.5*Q[7, 1] - 3.0*Q[7, 8] - 3.0*Q[9, 5]==G[7, 9] + G[9, 7],0.5*Q[1, 8] + 0.5*Q[3, 5] + 0.5*Q[7, 2] + 1.5*Q[7, 7] + 3.0*Q[9, 4]==0.,0.5*Q[7, 8] + 0.5*Q[9, 5]==0.,-3.0*Q[1, 5] + 3.11974486513888*Q[1, 8] - 6.0*Q[2, 4] + 3.11974486513888*Q[2, 7] - 3.0*Q[5, 1] + 3.11974486513888*Q[5, 3]==G[0, 5] + G[1, 2] + G[2, 1] + G[5, 0],-6.0*Q[1, 6] - 3.0*Q[2, 5] - 3.0*Q[5, 2] - 3.0*Q[5, 7] + 6.23948973027775*Q[5, 9] - 3.0*Q[7, 5] + 3.11974486513888*Q[7, 8] - 6.0*Q[8, 4] + 3.11974486513888*Q[8, 7]==G[1, 8] + G[2, 7] + G[3, 5] + G[5, 3] + G[7, 2] + G[8, 1],1.5*Q[1, 5] + 3.0*Q[2, 4] + 1.5*Q[5, 1] - 3.0*Q[5, 8] - 6.0*Q[7, 6] - 3.0*Q[8, 5]==G[5, 9] + G[7, 8] + G[8, 7] + G[9, 5],1.0*Q[1, 6] + 0.5*Q[2, 5] + 0.5*Q[5, 2] + 1.5*Q[5, 7] + 1.5*Q[7, 5] + 3.0*Q[8, 4]==0.,0.5*Q[5, 8] + 1.0*Q[7, 6] + 0.5*Q[8, 5]==0.,-3.0*Q[5, 5] + 3.11974486513888*Q[5, 8] - 6.0*Q[6, 4] + 3.11974486513888*Q[6, 7]==G[1, 6] + G[2, 5] + G[5, 2] + G[6, 1],-6.0*Q[5, 6] - 3.0*Q[6, 5]==G[5, 8] + G[6, 7] + G[7, 6] + G[8, 5],1.5*Q[5, 5] + 3.0*Q[6, 4]==0.,1.0*Q[5, 6] + 0.5*Q[6, 5]==0.,G[5, 6] + G[6, 5]==0.,-6.0*Q[1, 4] + 3.11974486513888*Q[1, 7] - 3.0*Q[4, 1] + 3.11974486513888*Q[4, 3]==G[0, 4] + G[1, 1] + G[4, 0],-3.0*Q[1, 5] - 3.0*Q[4, 2] - 3.0*Q[4, 7] + 6.23948973027775*Q[4, 9] - 6.0*Q[7, 4] + 3.11974486513888*Q[7, 7]==G[1, 7] + G[3, 4] + G[4, 3] + G[7, 1],3.0*Q[1, 4] + 1.5*Q[4, 1] - 3.0*Q[4, 8] - 3.0*Q[7, 5]==G[4, 9] + G[7, 7] + G[9, 4],0.5*Q[1, 5] + 0.5*Q[4, 2] + 1.5*Q[4, 7] + 3.0*Q[7, 4]==0.,0.5*Q[4, 8] + 0.5*Q[7, 5]==0.,-3.0*Q[4, 5] + 3.11974486513888*Q[4, 8] - 6.0*Q[5, 4] + 3.11974486513888*Q[5, 7]==G[1, 5] + G[2, 4] + G[4, 2] + G[5, 1],-6.0*Q[4, 6] - 3.0*Q[5, 5]==G[4, 8] + G[5, 7] + G[7, 5] + G[8, 4],1.5*Q[4, 5] + 3.0*Q[5, 4]==0.,1.0*Q[4, 6] + 0.5*Q[5, 5]==0.,G[4, 6] + G[5, 5] + G[6, 4]==0.,-6.0*Q[4, 4] + 3.11974486513888*Q[4, 7]==G[1, 4] + G[4, 1],-3.0*Q[4, 5]==G[4, 7] + G[7, 4],3.0*Q[4, 4]==0.,0.5*Q[4, 5]==0.,G[4, 5] + G[5, 4]==0.,G[4, 4]==0]
            constraints += [116.7748*J[0, 0] + 1.0*Q[0, 0] - 1.000001==M[0, 0],116.7748*J[0, 3] + 116.7748*J[3, 0] + 1.0*Q[0, 3] + 1.0*Q[3, 0]==M[0, 3] + M[3, 0],116.7748*J[3, 3] + 1.0*Q[0, 9] + 1.0*Q[3, 3] + 1.0*Q[9, 0]==M[0, 9] + M[3, 3] + M[9, 0],Q[3, 9] + Q[9, 3]==M[3, 9] + M[9, 3],Q[9, 9]==M[9, 9],-0.64*J[0, 0] + 116.7748*J[0, 2] + 116.7748*J[2, 0] + 1.0*Q[0, 2] + 1.0*Q[2, 0]==M[0, 2] + M[2, 0],-0.64*J[0, 3] + 116.7748*J[2, 3] - 0.64*J[3, 0] + 116.7748*J[3, 2] + 1.0*Q[0, 8] + 1.0*Q[2, 3] + 1.0*Q[3, 2] + 1.0*Q[8, 0]==M[0, 8] + M[2, 3] + M[3, 2] + M[8, 0],-0.64*J[3, 3] + 1.0*Q[2, 9] + 1.0*Q[3, 8] + 1.0*Q[8, 3] + 1.0*Q[9, 2]==M[2, 9] + M[3, 8] + M[8, 3] + M[9, 2],Q[8, 9] + Q[9, 8]==M[8, 9] + M[9, 8],1.0*J[0, 0] - 0.64*J[0, 2] - 0.64*J[2, 0] + 116.7748*J[2, 2] + 1.0*Q[0, 6] + 1.0*Q[2, 2] + 1.0*Q[6, 0]==M[0, 6] + M[2, 2] + M[6, 0],1.0*J[0, 3] - 0.64*J[2, 3] + 1.0*J[3, 0] - 0.64*J[3, 2] + 1.0*Q[2, 8] + 1.0*Q[3, 6] + 1.0*Q[6, 3] + 1.0*Q[8, 2]==M[2, 8] + M[3, 6] + M[6, 3] + M[8, 2],1.0*J[3, 3] + 1.0*Q[6, 9] + 1.0*Q[8, 8] + 1.0*Q[9, 6]==M[6, 9] + M[8, 8] + M[9, 6],1.0*J[0, 2] + 1.0*J[2, 0] - 0.64*J[2, 2] + 1.0*Q[2, 6] + 1.0*Q[6, 2]==M[2, 6] + M[6, 2],1.0*J[2, 3] + 1.0*J[3, 2] + 1.0*Q[6, 8] + 1.0*Q[8, 6]==M[6, 8] + M[8, 6],1.0*J[2, 2] + 1.0*Q[6, 6]==M[6, 6],21.64*J[0, 0] + 116.7748*J[0, 1] + 116.7748*J[1, 0] + 1.0*Q[0, 1] + 1.0*Q[1, 0]==M[0, 1] + M[1, 0],21.64*J[0, 3] + 116.7748*J[1, 3] + 21.64*J[3, 0] + 116.7748*J[3, 1] + 1.0*Q[0, 7] + 1.0*Q[1, 3] + 1.0*Q[3, 1] + 1.0*Q[7, 0]==M[0, 7] + M[1, 3] + M[3, 1] + M[7, 0],21.64*J[3, 3] + 1.0*Q[1, 9] + 1.0*Q[3, 7] + 1.0*Q[7, 3] + 1.0*Q[9, 1]==M[1, 9] + M[3, 7] + M[7, 3] + M[9, 1],Q[7, 9] + Q[9, 7]==M[7, 9] + M[9, 7],-0.64*J[0, 1] + 21.64*J[0, 2] - 0.64*J[1, 0] + 116.7748*J[1, 2] + 21.64*J[2, 0] + 116.7748*J[2, 1] + 1.0*Q[0, 5] + 1.0*Q[1, 2] + 1.0*Q[2, 1] + 1.0*Q[5, 0]==M[0, 5] + M[1, 2] + M[2, 1] + M[5, 0],-0.64*J[1, 3] + 21.64*J[2, 3] - 0.64*J[3, 1] + 21.64*J[3, 2] + 1.0*Q[1, 8] + 1.0*Q[2, 7] + 1.0*Q[3, 5] + 1.0*Q[5, 3] + 1.0*Q[7, 2] + 1.0*Q[8, 1]==M[1, 8] + M[2, 7] + M[3, 5] + M[5, 3] + M[7, 2] + M[8, 1],Q[5, 9] + Q[7, 8] + Q[8, 7] + Q[9, 5]==M[5, 9] + M[7, 8] + M[8, 7] + M[9, 5],1.0*J[0, 1] + 1.0*J[1, 0] - 0.64*J[1, 2] - 0.64*J[2, 1] + 21.64*J[2, 2] + 1.0*Q[1, 6] + 1.0*Q[2, 5] + 1.0*Q[5, 2] + 1.0*Q[6, 1]==M[1, 6] + M[2, 5] + M[5, 2] + M[6, 1],1.0*J[1, 3] + 1.0*J[3, 1] + 1.0*Q[5, 8] + 1.0*Q[6, 7] + 1.0*Q[7, 6] + 1.0*Q[8, 5]==M[5, 8] + M[6, 7] + M[7, 6] + M[8, 5],1.0*J[1, 2] + 1.0*J[2, 1] + 1.0*Q[5, 6] + 1.0*Q[6, 5]==M[5, 6] + M[6, 5],1.0*J[0, 0] + 21.64*J[0, 1] + 21.64*J[1, 0] + 116.7748*J[1, 1] + 1.0*Q[0, 4] + 1.0*Q[1, 1] + 1.0*Q[4, 0]==M[0, 4] + M[1, 1] + M[4, 0],1.0*J[0, 3] + 21.64*J[1, 3] + 1.0*J[3, 0] + 21.64*J[3, 1] + 1.0*Q[1, 7] + 1.0*Q[3, 4] + 1.0*Q[4, 3] + 1.0*Q[7, 1]==M[1, 7] + M[3, 4] + M[4, 3] + M[7, 1],1.0*J[3, 3] + 1.0*Q[4, 9] + 1.0*Q[7, 7] + 1.0*Q[9, 4]==M[4, 9] + M[7, 7] + M[9, 4],1.0*J[0, 2] - 0.64*J[1, 1] + 21.64*J[1, 2] + 1.0*J[2, 0] + 21.64*J[2, 1] + 1.0*Q[1, 5] + 1.0*Q[2, 4] + 1.0*Q[4, 2] + 1.0*Q[5, 1]==M[1, 5] + M[2, 4] + M[4, 2] + M[5, 1],1.0*J[2, 3] + 1.0*J[3, 2] + 1.0*Q[4, 8] + 1.0*Q[5, 7] + 1.0*Q[7, 5] + 1.0*Q[8, 4]==M[4, 8] + M[5, 7] + M[7, 5] + M[8, 4],1.0*J[1, 1] + 1.0*J[2, 2] + 1.0*Q[4, 6] + 1.0*Q[5, 5] + 1.0*Q[6, 4]==M[4, 6] + M[5, 5] + M[6, 4],1.0*J[0, 1] + 1.0*J[1, 0] + 21.64*J[1, 1] + 1.0*Q[1, 4] + 1.0*Q[4, 1]==M[1, 4] + M[4, 1],1.0*J[1, 3] + 1.0*J[3, 1] + 1.0*Q[4, 7] + 1.0*Q[7, 4]==M[4, 7] + M[7, 4],1.0*J[1, 2] + 1.0*J[2, 1] + 1.0*Q[4, 5] + 1.0*Q[5, 4]==M[4, 5] + M[5, 4],1.0*J[1, 1] + 1.0*Q[4, 4]==M[4, 4]]

        elif direction == 2:
            constraints += [-3.0*Q[0, 1]==G[0, 0],-3.0*Q[0, 2] - 3.0*Q[0, 7] - 3.0*Q[3, 1]==G[0, 3] + G[3, 0],1.5*Q[0, 1] - 3.0*Q[0, 8] - 3.0*Q[3, 2] - 3.0*Q[3, 7] - 3.0*Q[9, 1]==G[0, 9] + G[3, 3] + G[9, 0],0.5*Q[0, 2] + 1.5*Q[0, 7] + 1.5*Q[3, 1] - 3.0*Q[3, 8] - 3.0*Q[9, 2] - 3.0*Q[9, 7]==G[3, 9] + G[9, 3],0.5*Q[0, 8] + 0.5*Q[3, 2] + 1.5*Q[3, 7] + 1.5*Q[9, 1] - 3.0*Q[9, 8]==G[9, 9],0.5*Q[3, 8] + 0.5*Q[9, 2] + 1.5*Q[9, 7]==0.,0.5*Q[9, 8]==0.,-3.0*Q[0, 5] - 3.0*Q[2, 1]==G[0, 2] + G[2, 0],-6.0*Q[0, 6] - 3.0*Q[2, 2] - 3.0*Q[2, 7] - 3.0*Q[3, 5] - 3.0*Q[8, 1]==G[0, 8] + G[2, 3] + G[3, 2] + G[8, 0],1.5*Q[0, 5] + 1.5*Q[2, 1] - 3.0*Q[2, 8] - 6.0*Q[3, 6] - 3.0*Q[8, 2] - 3.0*Q[8, 7] - 3.0*Q[9, 5]==G[2, 9] + G[3, 8] + G[8, 3] + G[9, 2],1.0*Q[0, 6] + 0.5*Q[2, 2] + 1.5*Q[2, 7] + 1.5*Q[3, 5] + 1.5*Q[8, 1] - 3.0*Q[8, 8] - 6.0*Q[9, 6]==G[8, 9] + G[9, 8],0.5*Q[2, 8] + 1.0*Q[3, 6] + 0.5*Q[8, 2] + 1.5*Q[8, 7] + 1.5*Q[9, 5]==0.,0.5*Q[8, 8] + 1.0*Q[9, 6]==0.,-3.0*Q[2, 5] - 3.0*Q[6, 1]==G[0, 6] + G[2, 2] + G[6, 0],-6.0*Q[2, 6] - 3.0*Q[6, 2] - 3.0*Q[6, 7] - 3.0*Q[8, 5]==G[2, 8] + G[3, 6] + G[6, 3] + G[8, 2],1.5*Q[2, 5] + 1.5*Q[6, 1] - 3.0*Q[6, 8] - 6.0*Q[8, 6]==G[6, 9] + G[8, 8] + G[9, 6],1.0*Q[2, 6] + 0.5*Q[6, 2] + 1.5*Q[6, 7] + 1.5*Q[8, 5]==0.,0.5*Q[6, 8] + 1.0*Q[8, 6]==0.,-3.0*Q[6, 5]==G[2, 6] + G[6, 2],-6.0*Q[6, 6]==G[6, 8] + G[8, 6],1.5*Q[6, 5]==0.,1.0*Q[6, 6]==0.,G[6, 6]==0.,-6.0*Q[0, 4] - 3.0*Q[1, 1]==G[0, 1] + G[1, 0],-3.0*Q[0, 5] - 3.0*Q[1, 2] - 3.0*Q[1, 7] - 6.0*Q[3, 4] - 3.0*Q[7, 1]==G[0, 7] + G[1, 3] + G[3, 1] + G[7, 0],3.0*Q[0, 4] + 1.5*Q[1, 1] - 3.0*Q[1, 8] - 3.0*Q[3, 5] - 3.0*Q[7, 2] - 3.0*Q[7, 7] - 6.0*Q[9, 4]==G[1, 9] + G[3, 7] + G[7, 3] + G[9, 1],0.5*Q[0, 5] + 0.5*Q[1, 2] + 1.5*Q[1, 7] + 3.0*Q[3, 4] + 1.5*Q[7, 1] - 3.0*Q[7, 8] - 3.0*Q[9, 5]==G[7, 9] + G[9, 7],0.5*Q[1, 8] + 0.5*Q[3, 5] + 0.5*Q[7, 2] + 1.5*Q[7, 7] + 3.0*Q[9, 4]==0.,0.5*Q[7, 8] + 0.5*Q[9, 5]==0.,-3.0*Q[1, 5] - 6.0*Q[2, 4] - 3.0*Q[5, 1]==G[0, 5] + G[1, 2] + G[2, 1] + G[5, 0],-6.0*Q[1, 6] - 3.0*Q[2, 5] - 3.0*Q[5, 2] - 3.0*Q[5, 7] - 3.0*Q[7, 5] - 6.0*Q[8, 4]==G[1, 8] + G[2, 7] + G[3, 5] + G[5, 3] + G[7, 2] + G[8, 1],1.5*Q[1, 5] + 3.0*Q[2, 4] + 1.5*Q[5, 1] - 3.0*Q[5, 8] - 6.0*Q[7, 6] - 3.0*Q[8, 5]==G[5, 9] + G[7, 8] + G[8, 7] + G[9, 5],1.0*Q[1, 6] + 0.5*Q[2, 5] + 0.5*Q[5, 2] + 1.5*Q[5, 7] + 1.5*Q[7, 5] + 3.0*Q[8, 4]==0.,0.5*Q[5, 8] + 1.0*Q[7, 6] + 0.5*Q[8, 5]==0.,-3.0*Q[5, 5] - 6.0*Q[6, 4]==G[1, 6] + G[2, 5] + G[5, 2] + G[6, 1],-6.0*Q[5, 6] - 3.0*Q[6, 5]==G[5, 8] + G[6, 7] + G[7, 6] + G[8, 5],1.5*Q[5, 5] + 3.0*Q[6, 4]==0.,1.0*Q[5, 6] + 0.5*Q[6, 5]==0.,G[5, 6] + G[6, 5]==0.,-6.0*Q[1, 4] - 3.0*Q[4, 1]==G[0, 4] + G[1, 1] + G[4, 0],-3.0*Q[1, 5] - 3.0*Q[4, 2] - 3.0*Q[4, 7] - 6.0*Q[7, 4]==G[1, 7] + G[3, 4] + G[4, 3] + G[7, 1],3.0*Q[1, 4] + 1.5*Q[4, 1] - 3.0*Q[4, 8] - 3.0*Q[7, 5]==G[4, 9] + G[7, 7] + G[9, 4],0.5*Q[1, 5] + 0.5*Q[4, 2] + 1.5*Q[4, 7] + 3.0*Q[7, 4]==0.,0.5*Q[4, 8] + 0.5*Q[7, 5]==0.,-3.0*Q[4, 5] - 6.0*Q[5, 4]==G[1, 5] + G[2, 4] + G[4, 2] + G[5, 1],-6.0*Q[4, 6] - 3.0*Q[5, 5]==G[4, 8] + G[5, 7] + G[7, 5] + G[8, 4],1.5*Q[4, 5] + 3.0*Q[5, 4]==0.,1.0*Q[4, 6] + 0.5*Q[5, 5]==0.,G[4, 6] + G[5, 5] + G[6, 4]==0.,-6.0*Q[4, 4]==G[1, 4] + G[4, 1],-3.0*Q[4, 5]==G[4, 7] + G[7, 4],3.0*Q[4, 4]==0.,0.5*Q[4, 5]==0.,G[4, 5] + G[5, 4]==0.,G[4, 4]==0]
            constraints += [116.7748*J[0, 0] + 1.0*Q[0, 0] - 1.000001==M[0, 0],116.7748*J[0, 3] + 116.7748*J[3, 0] + 1.0*Q[0, 3] + 1.0*Q[3, 0]==M[0, 3] + M[3, 0],116.7748*J[3, 3] + 1.0*Q[0, 9] + 1.0*Q[3, 3] + 1.0*Q[9, 0]==M[0, 9] + M[3, 3] + M[9, 0],Q[3, 9] + Q[9, 3]==M[3, 9] + M[9, 3],Q[9, 9]==M[9, 9],-0.64*J[0, 0] + 116.7748*J[0, 2] + 116.7748*J[2, 0] + 1.0*Q[0, 2] + 1.0*Q[2, 0]==M[0, 2] + M[2, 0],-0.64*J[0, 3] + 116.7748*J[2, 3] - 0.64*J[3, 0] + 116.7748*J[3, 2] + 1.0*Q[0, 8] + 1.0*Q[2, 3] + 1.0*Q[3, 2] + 1.0*Q[8, 0]==M[0, 8] + M[2, 3] + M[3, 2] + M[8, 0],-0.64*J[3, 3] + 1.0*Q[2, 9] + 1.0*Q[3, 8] + 1.0*Q[8, 3] + 1.0*Q[9, 2]==M[2, 9] + M[3, 8] + M[8, 3] + M[9, 2],Q[8, 9] + Q[9, 8]==M[8, 9] + M[9, 8],1.0*J[0, 0] - 0.64*J[0, 2] - 0.64*J[2, 0] + 116.7748*J[2, 2] + 1.0*Q[0, 6] + 1.0*Q[2, 2] + 1.0*Q[6, 0]==M[0, 6] + M[2, 2] + M[6, 0],1.0*J[0, 3] - 0.64*J[2, 3] + 1.0*J[3, 0] - 0.64*J[3, 2] + 1.0*Q[2, 8] + 1.0*Q[3, 6] + 1.0*Q[6, 3] + 1.0*Q[8, 2]==M[2, 8] + M[3, 6] + M[6, 3] + M[8, 2],1.0*J[3, 3] + 1.0*Q[6, 9] + 1.0*Q[8, 8] + 1.0*Q[9, 6]==M[6, 9] + M[8, 8] + M[9, 6],1.0*J[0, 2] + 1.0*J[2, 0] - 0.64*J[2, 2] + 1.0*Q[2, 6] + 1.0*Q[6, 2]==M[2, 6] + M[6, 2],1.0*J[2, 3] + 1.0*J[3, 2] + 1.0*Q[6, 8] + 1.0*Q[8, 6]==M[6, 8] + M[8, 6],1.0*J[2, 2] + 1.0*Q[6, 6]==M[6, 6],21.64*J[0, 0] + 116.7748*J[0, 1] + 116.7748*J[1, 0] + 1.0*Q[0, 1] + 1.0*Q[1, 0]==M[0, 1] + M[1, 0],21.64*J[0, 3] + 116.7748*J[1, 3] + 21.64*J[3, 0] + 116.7748*J[3, 1] + 1.0*Q[0, 7] + 1.0*Q[1, 3] + 1.0*Q[3, 1] + 1.0*Q[7, 0]==M[0, 7] + M[1, 3] + M[3, 1] + M[7, 0],21.64*J[3, 3] + 1.0*Q[1, 9] + 1.0*Q[3, 7] + 1.0*Q[7, 3] + 1.0*Q[9, 1]==M[1, 9] + M[3, 7] + M[7, 3] + M[9, 1],Q[7, 9] + Q[9, 7]==M[7, 9] + M[9, 7],-0.64*J[0, 1] + 21.64*J[0, 2] - 0.64*J[1, 0] + 116.7748*J[1, 2] + 21.64*J[2, 0] + 116.7748*J[2, 1] + 1.0*Q[0, 5] + 1.0*Q[1, 2] + 1.0*Q[2, 1] + 1.0*Q[5, 0]==M[0, 5] + M[1, 2] + M[2, 1] + M[5, 0],-0.64*J[1, 3] + 21.64*J[2, 3] - 0.64*J[3, 1] + 21.64*J[3, 2] + 1.0*Q[1, 8] + 1.0*Q[2, 7] + 1.0*Q[3, 5] + 1.0*Q[5, 3] + 1.0*Q[7, 2] + 1.0*Q[8, 1]==M[1, 8] + M[2, 7] + M[3, 5] + M[5, 3] + M[7, 2] + M[8, 1],Q[5, 9] + Q[7, 8] + Q[8, 7] + Q[9, 5]==M[5, 9] + M[7, 8] + M[8, 7] + M[9, 5],1.0*J[0, 1] + 1.0*J[1, 0] - 0.64*J[1, 2] - 0.64*J[2, 1] + 21.64*J[2, 2] + 1.0*Q[1, 6] + 1.0*Q[2, 5] + 1.0*Q[5, 2] + 1.0*Q[6, 1]==M[1, 6] + M[2, 5] + M[5, 2] + M[6, 1],1.0*J[1, 3] + 1.0*J[3, 1] + 1.0*Q[5, 8] + 1.0*Q[6, 7] + 1.0*Q[7, 6] + 1.0*Q[8, 5]==M[5, 8] + M[6, 7] + M[7, 6] + M[8, 5],1.0*J[1, 2] + 1.0*J[2, 1] + 1.0*Q[5, 6] + 1.0*Q[6, 5]==M[5, 6] + M[6, 5],1.0*J[0, 0] + 21.64*J[0, 1] + 21.64*J[1, 0] + 116.7748*J[1, 1] + 1.0*Q[0, 4] + 1.0*Q[1, 1] + 1.0*Q[4, 0]==M[0, 4] + M[1, 1] + M[4, 0],1.0*J[0, 3] + 21.64*J[1, 3] + 1.0*J[3, 0] + 21.64*J[3, 1] + 1.0*Q[1, 7] + 1.0*Q[3, 4] + 1.0*Q[4, 3] + 1.0*Q[7, 1]==M[1, 7] + M[3, 4] + M[4, 3] + M[7, 1],1.0*J[3, 3] + 1.0*Q[4, 9] + 1.0*Q[7, 7] + 1.0*Q[9, 4]==M[4, 9] + M[7, 7] + M[9, 4],1.0*J[0, 2] - 0.64*J[1, 1] + 21.64*J[1, 2] + 1.0*J[2, 0] + 21.64*J[2, 1] + 1.0*Q[1, 5] + 1.0*Q[2, 4] + 1.0*Q[4, 2] + 1.0*Q[5, 1]==M[1, 5] + M[2, 4] + M[4, 2] + M[5, 1],1.0*J[2, 3] + 1.0*J[3, 2] + 1.0*Q[4, 8] + 1.0*Q[5, 7] + 1.0*Q[7, 5] + 1.0*Q[8, 4]==M[4, 8] + M[5, 7] + M[7, 5] + M[8, 4],1.0*J[1, 1] + 1.0*J[2, 2] + 1.0*Q[4, 6] + 1.0*Q[5, 5] + 1.0*Q[6, 4]==M[4, 6] + M[5, 5] + M[6, 4],1.0*J[0, 1] + 1.0*J[1, 0] + 21.64*J[1, 1] + 1.0*Q[1, 4] + 1.0*Q[4, 1]==M[1, 4] + M[4, 1],1.0*J[1, 3] + 1.0*J[3, 1] + 1.0*Q[4, 7] + 1.0*Q[7, 4]==M[4, 7] + M[7, 4],1.0*J[1, 2] + 1.0*J[2, 1] + 1.0*Q[4, 5] + 1.0*Q[5, 4]==M[4, 5] + M[5, 4],1.0*J[1, 1] + 1.0*Q[4, 4]==M[4, 4]]
        
        elif direction == 3:
            constraints += [-3.0*Q[0, 1]==G[0, 0],-3.0*Q[0, 2] - 3.0*Q[0, 7] - 3.0*Q[3, 1]==G[0, 3] + G[3, 0],1.5*Q[0, 1] - 3.0*Q[0, 8] - 3.0*Q[3, 2] - 3.0*Q[3, 7] - 3.0*Q[9, 1]==G[0, 9] + G[3, 3] + G[9, 0],0.5*Q[0, 2] + 1.5*Q[0, 7] + 1.5*Q[3, 1] - 3.0*Q[3, 8] - 3.0*Q[9, 2] - 3.0*Q[9, 7]==G[3, 9] + G[9, 3],0.5*Q[0, 8] + 0.5*Q[3, 2] + 1.5*Q[3, 7] + 1.5*Q[9, 1] - 3.0*Q[9, 8]==G[9, 9],0.5*Q[3, 8] + 0.5*Q[9, 2] + 1.5*Q[9, 7]==0.,0.5*Q[9, 8]==0.,-3.0*Q[0, 5] - 3.0*Q[2, 1]==G[0, 2] + G[2, 0],-6.0*Q[0, 6] - 3.0*Q[2, 2] - 3.0*Q[2, 7] - 3.0*Q[3, 5] - 3.0*Q[8, 1]==G[0, 8] + G[2, 3] + G[3, 2] + G[8, 0],1.5*Q[0, 5] + 1.5*Q[2, 1] - 3.0*Q[2, 8] - 6.0*Q[3, 6] - 3.0*Q[8, 2] - 3.0*Q[8, 7] - 3.0*Q[9, 5]==G[2, 9] + G[3, 8] + G[8, 3] + G[9, 2],1.0*Q[0, 6] + 0.5*Q[2, 2] + 1.5*Q[2, 7] + 1.5*Q[3, 5] + 1.5*Q[8, 1] - 3.0*Q[8, 8] - 6.0*Q[9, 6]==G[8, 9] + G[9, 8],0.5*Q[2, 8] + 1.0*Q[3, 6] + 0.5*Q[8, 2] + 1.5*Q[8, 7] + 1.5*Q[9, 5]==0.,0.5*Q[8, 8] + 1.0*Q[9, 6]==0.,-3.0*Q[2, 5] - 3.0*Q[6, 1]==G[0, 6] + G[2, 2] + G[6, 0],-6.0*Q[2, 6] - 3.0*Q[6, 2] - 3.0*Q[6, 7] - 3.0*Q[8, 5]==G[2, 8] + G[3, 6] + G[6, 3] + G[8, 2],1.5*Q[2, 5] + 1.5*Q[6, 1] - 3.0*Q[6, 8] - 6.0*Q[8, 6]==G[6, 9] + G[8, 8] + G[9, 6],1.0*Q[2, 6] + 0.5*Q[6, 2] + 1.5*Q[6, 7] + 1.5*Q[8, 5]==0.,0.5*Q[6, 8] + 1.0*Q[8, 6]==0.,-3.0*Q[6, 5]==G[2, 6] + G[6, 2],-6.0*Q[6, 6]==G[6, 8] + G[8, 6],1.5*Q[6, 5]==0.,1.0*Q[6, 6]==0.,G[6, 6]==0.,-6.0*Q[0, 4] - 3.0*Q[1, 1]==G[0, 1] + G[1, 0],-3.0*Q[0, 5] - 3.0*Q[1, 2] - 3.0*Q[1, 7] - 6.0*Q[3, 4] - 3.0*Q[7, 1]==G[0, 7] + G[1, 3] + G[3, 1] + G[7, 0],3.0*Q[0, 4] + 1.5*Q[1, 1] - 3.0*Q[1, 8] - 3.0*Q[3, 5] - 3.0*Q[7, 2] - 3.0*Q[7, 7] - 6.0*Q[9, 4]==G[1, 9] + G[3, 7] + G[7, 3] + G[9, 1],0.5*Q[0, 5] + 0.5*Q[1, 2] + 1.5*Q[1, 7] + 3.0*Q[3, 4] + 1.5*Q[7, 1] - 3.0*Q[7, 8] - 3.0*Q[9, 5]==G[7, 9] + G[9, 7],0.5*Q[1, 8] + 0.5*Q[3, 5] + 0.5*Q[7, 2] + 1.5*Q[7, 7] + 3.0*Q[9, 4]==0.,0.5*Q[7, 8] + 0.5*Q[9, 5]==0.,-3.0*Q[1, 5] - 6.0*Q[2, 4] - 3.0*Q[5, 1]==G[0, 5] + G[1, 2] + G[2, 1] + G[5, 0],-6.0*Q[1, 6] - 3.0*Q[2, 5] - 3.0*Q[5, 2] - 3.0*Q[5, 7] - 3.0*Q[7, 5] - 6.0*Q[8, 4]==G[1, 8] + G[2, 7] + G[3, 5] + G[5, 3] + G[7, 2] + G[8, 1],1.5*Q[1, 5] + 3.0*Q[2, 4] + 1.5*Q[5, 1] - 3.0*Q[5, 8] - 6.0*Q[7, 6] - 3.0*Q[8, 5]==G[5, 9] + G[7, 8] + G[8, 7] + G[9, 5],1.0*Q[1, 6] + 0.5*Q[2, 5] + 0.5*Q[5, 2] + 1.5*Q[5, 7] + 1.5*Q[7, 5] + 3.0*Q[8, 4]==0.,0.5*Q[5, 8] + 1.0*Q[7, 6] + 0.5*Q[8, 5]==0.,-3.0*Q[5, 5] - 6.0*Q[6, 4]==G[1, 6] + G[2, 5] + G[5, 2] + G[6, 1],-6.0*Q[5, 6] - 3.0*Q[6, 5]==G[5, 8] + G[6, 7] + G[7, 6] + G[8, 5],1.5*Q[5, 5] + 3.0*Q[6, 4]==0.,1.0*Q[5, 6] + 0.5*Q[6, 5]==0.,G[5, 6] + G[6, 5]==0.,-6.0*Q[1, 4] - 3.0*Q[4, 1]==G[0, 4] + G[1, 1] + G[4, 0],-3.0*Q[1, 5] - 3.0*Q[4, 2] - 3.0*Q[4, 7] - 6.0*Q[7, 4]==G[1, 7] + G[3, 4] + G[4, 3] + G[7, 1],3.0*Q[1, 4] + 1.5*Q[4, 1] - 3.0*Q[4, 8] - 3.0*Q[7, 5]==G[4, 9] + G[7, 7] + G[9, 4],0.5*Q[1, 5] + 0.5*Q[4, 2] + 1.5*Q[4, 7] + 3.0*Q[7, 4]==0.,0.5*Q[4, 8] + 0.5*Q[7, 5]==0.,-3.0*Q[4, 5] - 6.0*Q[5, 4]==G[1, 5] + G[2, 4] + G[4, 2] + G[5, 1],-6.0*Q[4, 6] - 3.0*Q[5, 5]==G[4, 8] + G[5, 7] + G[7, 5] + G[8, 4],1.5*Q[4, 5] + 3.0*Q[5, 4]==0.,1.0*Q[4, 6] + 0.5*Q[5, 5]==0.,G[4, 6] + G[5, 5] + G[6, 4]==0.,-6.0*Q[4, 4]==G[1, 4] + G[4, 1],-3.0*Q[4, 5]==G[4, 7] + G[7, 4],3.0*Q[4, 4]==0.,0.5*Q[4, 5]==0.,G[4, 5] + G[5, 4]==0.,G[4, 4]==0]
            constraints += [116.7748*J[0, 0] + 1.0*Q[0, 0] - 1.000001==M[0, 0],116.7748*J[0, 3] + 116.7748*J[3, 0] + 1.0*Q[0, 3] + 1.0*Q[3, 0]==M[0, 3] + M[3, 0],116.7748*J[3, 3] + 1.0*Q[0, 9] + 1.0*Q[3, 3] + 1.0*Q[9, 0]==M[0, 9] + M[3, 3] + M[9, 0],Q[3, 9] + Q[9, 3]==M[3, 9] + M[9, 3],Q[9, 9]==M[9, 9],-0.64*J[0, 0] + 116.7748*J[0, 2] + 116.7748*J[2, 0] + 1.0*Q[0, 2] + 1.0*Q[2, 0]==M[0, 2] + M[2, 0],-0.64*J[0, 3] + 116.7748*J[2, 3] - 0.64*J[3, 0] + 116.7748*J[3, 2] + 1.0*Q[0, 8] + 1.0*Q[2, 3] + 1.0*Q[3, 2] + 1.0*Q[8, 0]==M[0, 8] + M[2, 3] + M[3, 2] + M[8, 0],-0.64*J[3, 3] + 1.0*Q[2, 9] + 1.0*Q[3, 8] + 1.0*Q[8, 3] + 1.0*Q[9, 2]==M[2, 9] + M[3, 8] + M[8, 3] + M[9, 2],Q[8, 9] + Q[9, 8]==M[8, 9] + M[9, 8],1.0*J[0, 0] - 0.64*J[0, 2] - 0.64*J[2, 0] + 116.7748*J[2, 2] + 1.0*Q[0, 6] + 1.0*Q[2, 2] + 1.0*Q[6, 0]==M[0, 6] + M[2, 2] + M[6, 0],1.0*J[0, 3] - 0.64*J[2, 3] + 1.0*J[3, 0] - 0.64*J[3, 2] + 1.0*Q[2, 8] + 1.0*Q[3, 6] + 1.0*Q[6, 3] + 1.0*Q[8, 2]==M[2, 8] + M[3, 6] + M[6, 3] + M[8, 2],1.0*J[3, 3] + 1.0*Q[6, 9] + 1.0*Q[8, 8] + 1.0*Q[9, 6]==M[6, 9] + M[8, 8] + M[9, 6],1.0*J[0, 2] + 1.0*J[2, 0] - 0.64*J[2, 2] + 1.0*Q[2, 6] + 1.0*Q[6, 2]==M[2, 6] + M[6, 2],1.0*J[2, 3] + 1.0*J[3, 2] + 1.0*Q[6, 8] + 1.0*Q[8, 6]==M[6, 8] + M[8, 6],1.0*J[2, 2] + 1.0*Q[6, 6]==M[6, 6],21.64*J[0, 0] + 116.7748*J[0, 1] + 116.7748*J[1, 0] + 1.0*Q[0, 1] + 1.0*Q[1, 0]==M[0, 1] + M[1, 0],21.64*J[0, 3] + 116.7748*J[1, 3] + 21.64*J[3, 0] + 116.7748*J[3, 1] + 1.0*Q[0, 7] + 1.0*Q[1, 3] + 1.0*Q[3, 1] + 1.0*Q[7, 0]==M[0, 7] + M[1, 3] + M[3, 1] + M[7, 0],21.64*J[3, 3] + 1.0*Q[1, 9] + 1.0*Q[3, 7] + 1.0*Q[7, 3] + 1.0*Q[9, 1]==M[1, 9] + M[3, 7] + M[7, 3] + M[9, 1],Q[7, 9] + Q[9, 7]==M[7, 9] + M[9, 7],-0.64*J[0, 1] + 21.64*J[0, 2] - 0.64*J[1, 0] + 116.7748*J[1, 2] + 21.64*J[2, 0] + 116.7748*J[2, 1] + 1.0*Q[0, 5] + 1.0*Q[1, 2] + 1.0*Q[2, 1] + 1.0*Q[5, 0]==M[0, 5] + M[1, 2] + M[2, 1] + M[5, 0],-0.64*J[1, 3] + 21.64*J[2, 3] - 0.64*J[3, 1] + 21.64*J[3, 2] + 1.0*Q[1, 8] + 1.0*Q[2, 7] + 1.0*Q[3, 5] + 1.0*Q[5, 3] + 1.0*Q[7, 2] + 1.0*Q[8, 1]==M[1, 8] + M[2, 7] + M[3, 5] + M[5, 3] + M[7, 2] + M[8, 1],Q[5, 9] + Q[7, 8] + Q[8, 7] + Q[9, 5]==M[5, 9] + M[7, 8] + M[8, 7] + M[9, 5],1.0*J[0, 1] + 1.0*J[1, 0] - 0.64*J[1, 2] - 0.64*J[2, 1] + 21.64*J[2, 2] + 1.0*Q[1, 6] + 1.0*Q[2, 5] + 1.0*Q[5, 2] + 1.0*Q[6, 1]==M[1, 6] + M[2, 5] + M[5, 2] + M[6, 1],1.0*J[1, 3] + 1.0*J[3, 1] + 1.0*Q[5, 8] + 1.0*Q[6, 7] + 1.0*Q[7, 6] + 1.0*Q[8, 5]==M[5, 8] + M[6, 7] + M[7, 6] + M[8, 5],1.0*J[1, 2] + 1.0*J[2, 1] + 1.0*Q[5, 6] + 1.0*Q[6, 5]==M[5, 6] + M[6, 5],1.0*J[0, 0] + 21.64*J[0, 1] + 21.64*J[1, 0] + 116.7748*J[1, 1] + 1.0*Q[0, 4] + 1.0*Q[1, 1] + 1.0*Q[4, 0]==M[0, 4] + M[1, 1] + M[4, 0],1.0*J[0, 3] + 21.64*J[1, 3] + 1.0*J[3, 0] + 21.64*J[3, 1] + 1.0*Q[1, 7] + 1.0*Q[3, 4] + 1.0*Q[4, 3] + 1.0*Q[7, 1]==M[1, 7] + M[3, 4] + M[4, 3] + M[7, 1],1.0*J[3, 3] + 1.0*Q[4, 9] + 1.0*Q[7, 7] + 1.0*Q[9, 4]==M[4, 9] + M[7, 7] + M[9, 4],1.0*J[0, 2] - 0.64*J[1, 1] + 21.64*J[1, 2] + 1.0*J[2, 0] + 21.64*J[2, 1] + 1.0*Q[1, 5] + 1.0*Q[2, 4] + 1.0*Q[4, 2] + 1.0*Q[5, 1]==M[1, 5] + M[2, 4] + M[4, 2] + M[5, 1],1.0*J[2, 3] + 1.0*J[3, 2] + 1.0*Q[4, 8] + 1.0*Q[5, 7] + 1.0*Q[7, 5] + 1.0*Q[8, 4]==M[4, 8] + M[5, 7] + M[7, 5] + M[8, 4],1.0*J[1, 1] + 1.0*J[2, 2] + 1.0*Q[4, 6] + 1.0*Q[5, 5] + 1.0*Q[6, 4]==M[4, 6] + M[5, 5] + M[6, 4],1.0*J[0, 1] + 1.0*J[1, 0] + 21.64*J[1, 1] + 1.0*Q[1, 4] + 1.0*Q[4, 1]==M[1, 4] + M[4, 1],1.0*J[1, 3] + 1.0*J[3, 1] + 1.0*Q[4, 7] + 1.0*Q[7, 4]==M[4, 7] + M[7, 4],1.0*J[1, 2] + 1.0*J[2, 1] + 1.0*Q[4, 5] + 1.0*Q[5, 4]==M[4, 5] + M[5, 4],1.0*J[1, 1] + 1.0*Q[4, 4]==M[4, 4]]
        
        prob = cp.Problem(cp.Minimize(1),constraints)
        prob.solve(verbose=False,warm_start=True)
    
        status = prob.status
        solve_time = prob.solver_stats.solve_time

        return status,solve_time

    def solve_obstacle_2(self,car_x,car_y,yaw_z,direction):
        Q = cp.Variable((10,10), symmetric=False)
        G = cp.Variable((10,10), symmetric=True)
        M = cp.Variable((10,10), symmetric = True)
        J = cp.Variable((4,4), symmetric = True)

        constraints = [G >> 0]
        constraints += [M >> 0]
        constraints += [J >> 0]

        x_0 = car_x
        y_0 = car_y
        p_0 = yaw_z

        b_0 = np.array([[1,x_0,y_0,p_0,x_0**2,x_0*y_0,y_0**2,x_0*p_0,y_0*p_0,p_0**2]]).transpose()
        constraints += [b_0.T @ Q @ b_0 == 0]

        if direction == 1:
            constraints += [-3.0*Q[0, 1] + 3.11974486513888*Q[0, 3]==G[0, 0],-3.0*Q[0, 2] - 3.0*Q[0, 7] + 6.23948973027775*Q[0, 9] - 3.0*Q[3, 1] + 3.11974486513888*Q[3, 3]==G[0, 3] + G[3, 0],1.5*Q[0, 1] - 3.0*Q[0, 8] - 3.0*Q[3, 2] - 3.0*Q[3, 7] + 6.23948973027775*Q[3, 9] - 3.0*Q[9, 1] + 3.11974486513888*Q[9, 3]==G[0, 9] + G[3, 3] + G[9, 0],0.5*Q[0, 2] + 1.5*Q[0, 7] + 1.5*Q[3, 1] - 3.0*Q[3, 8] - 3.0*Q[9, 2] - 3.0*Q[9, 7] + 6.23948973027775*Q[9, 9]==G[3, 9] + G[9, 3],0.5*Q[0, 8] + 0.5*Q[3, 2] + 1.5*Q[3, 7] + 1.5*Q[9, 1] - 3.0*Q[9, 8]==G[9, 9],0.5*Q[3, 8] + 0.5*Q[9, 2] + 1.5*Q[9, 7]==0.,0.5*Q[9, 8]==0.,-3.0*Q[0, 5] + 3.11974486513888*Q[0, 8] - 3.0*Q[2, 1] + 3.11974486513888*Q[2, 3]==G[0, 2] + G[2, 0],-6.0*Q[0, 6] - 3.0*Q[2, 2] - 3.0*Q[2, 7] + 6.23948973027775*Q[2, 9] - 3.0*Q[3, 5] + 3.11974486513888*Q[3, 8] - 3.0*Q[8, 1] + 3.11974486513888*Q[8, 3]==G[0, 8] + G[2, 3] + G[3, 2] + G[8, 0],1.5*Q[0, 5] + 1.5*Q[2, 1] - 3.0*Q[2, 8] - 6.0*Q[3, 6] - 3.0*Q[8, 2] - 3.0*Q[8, 7] + 6.23948973027775*Q[8, 9] - 3.0*Q[9, 5] + 3.11974486513888*Q[9, 8]==G[2, 9] + G[3, 8] + G[8, 3] + G[9, 2],1.0*Q[0, 6] + 0.5*Q[2, 2] + 1.5*Q[2, 7] + 1.5*Q[3, 5] + 1.5*Q[8, 1] - 3.0*Q[8, 8] - 6.0*Q[9, 6]==G[8, 9] + G[9, 8],0.5*Q[2, 8] + 1.0*Q[3, 6] + 0.5*Q[8, 2] + 1.5*Q[8, 7] + 1.5*Q[9, 5]==0.,0.5*Q[8, 8] + 1.0*Q[9, 6]==0.,-3.0*Q[2, 5] + 3.11974486513888*Q[2, 8] - 3.0*Q[6, 1] + 3.11974486513888*Q[6, 3]==G[0, 6] + G[2, 2] + G[6, 0],-6.0*Q[2, 6] - 3.0*Q[6, 2] - 3.0*Q[6, 7] + 6.23948973027775*Q[6, 9] - 3.0*Q[8, 5] + 3.11974486513888*Q[8, 8]==G[2, 8] + G[3, 6] + G[6, 3] + G[8, 2],1.5*Q[2, 5] + 1.5*Q[6, 1] - 3.0*Q[6, 8] - 6.0*Q[8, 6]==G[6, 9] + G[8, 8] + G[9, 6],1.0*Q[2, 6] + 0.5*Q[6, 2] + 1.5*Q[6, 7] + 1.5*Q[8, 5]==0.,0.5*Q[6, 8] + 1.0*Q[8, 6]==0.,-3.0*Q[6, 5] + 3.11974486513888*Q[6, 8]==G[2, 6] + G[6, 2],-6.0*Q[6, 6]==G[6, 8] + G[8, 6],1.5*Q[6, 5]==0.,1.0*Q[6, 6]==0.,G[6, 6]==0.,-6.0*Q[0, 4] + 3.11974486513888*Q[0, 7] - 3.0*Q[1, 1] + 3.11974486513888*Q[1, 3]==G[0, 1] + G[1, 0],-3.0*Q[0, 5] - 3.0*Q[1, 2] - 3.0*Q[1, 7] + 6.23948973027775*Q[1, 9] - 6.0*Q[3, 4] + 3.11974486513888*Q[3, 7] - 3.0*Q[7, 1] + 3.11974486513888*Q[7, 3]==G[0, 7] + G[1, 3] + G[3, 1] + G[7, 0],3.0*Q[0, 4] + 1.5*Q[1, 1] - 3.0*Q[1, 8] - 3.0*Q[3, 5] - 3.0*Q[7, 2] - 3.0*Q[7, 7] + 6.23948973027775*Q[7, 9] - 6.0*Q[9, 4] + 3.11974486513888*Q[9, 7]==G[1, 9] + G[3, 7] + G[7, 3] + G[9, 1],0.5*Q[0, 5] + 0.5*Q[1, 2] + 1.5*Q[1, 7] + 3.0*Q[3, 4] + 1.5*Q[7, 1] - 3.0*Q[7, 8] - 3.0*Q[9, 5]==G[7, 9] + G[9, 7],0.5*Q[1, 8] + 0.5*Q[3, 5] + 0.5*Q[7, 2] + 1.5*Q[7, 7] + 3.0*Q[9, 4]==0.,0.5*Q[7, 8] + 0.5*Q[9, 5]==0.,-3.0*Q[1, 5] + 3.11974486513888*Q[1, 8] - 6.0*Q[2, 4] + 3.11974486513888*Q[2, 7] - 3.0*Q[5, 1] + 3.11974486513888*Q[5, 3]==G[0, 5] + G[1, 2] + G[2, 1] + G[5, 0],-6.0*Q[1, 6] - 3.0*Q[2, 5] - 3.0*Q[5, 2] - 3.0*Q[5, 7] + 6.23948973027775*Q[5, 9] - 3.0*Q[7, 5] + 3.11974486513888*Q[7, 8] - 6.0*Q[8, 4] + 3.11974486513888*Q[8, 7]==G[1, 8] + G[2, 7] + G[3, 5] + G[5, 3] + G[7, 2] + G[8, 1],1.5*Q[1, 5] + 3.0*Q[2, 4] + 1.5*Q[5, 1] - 3.0*Q[5, 8] - 6.0*Q[7, 6] - 3.0*Q[8, 5]==G[5, 9] + G[7, 8] + G[8, 7] + G[9, 5],1.0*Q[1, 6] + 0.5*Q[2, 5] + 0.5*Q[5, 2] + 1.5*Q[5, 7] + 1.5*Q[7, 5] + 3.0*Q[8, 4]==0.,0.5*Q[5, 8] + 1.0*Q[7, 6] + 0.5*Q[8, 5]==0.,-3.0*Q[5, 5] + 3.11974486513888*Q[5, 8] - 6.0*Q[6, 4] + 3.11974486513888*Q[6, 7]==G[1, 6] + G[2, 5] + G[5, 2] + G[6, 1],-6.0*Q[5, 6] - 3.0*Q[6, 5]==G[5, 8] + G[6, 7] + G[7, 6] + G[8, 5],1.5*Q[5, 5] + 3.0*Q[6, 4]==0.,1.0*Q[5, 6] + 0.5*Q[6, 5]==0.,G[5, 6] + G[6, 5]==0.,-6.0*Q[1, 4] + 3.11974486513888*Q[1, 7] - 3.0*Q[4, 1] + 3.11974486513888*Q[4, 3]==G[0, 4] + G[1, 1] + G[4, 0],-3.0*Q[1, 5] - 3.0*Q[4, 2] - 3.0*Q[4, 7] + 6.23948973027775*Q[4, 9] - 6.0*Q[7, 4] + 3.11974486513888*Q[7, 7]==G[1, 7] + G[3, 4] + G[4, 3] + G[7, 1],3.0*Q[1, 4] + 1.5*Q[4, 1] - 3.0*Q[4, 8] - 3.0*Q[7, 5]==G[4, 9] + G[7, 7] + G[9, 4],0.5*Q[1, 5] + 0.5*Q[4, 2] + 1.5*Q[4, 7] + 3.0*Q[7, 4]==0.,0.5*Q[4, 8] + 0.5*Q[7, 5]==0.,-3.0*Q[4, 5] + 3.11974486513888*Q[4, 8] - 6.0*Q[5, 4] + 3.11974486513888*Q[5, 7]==G[1, 5] + G[2, 4] + G[4, 2] + G[5, 1],-6.0*Q[4, 6] - 3.0*Q[5, 5]==G[4, 8] + G[5, 7] + G[7, 5] + G[8, 4],1.5*Q[4, 5] + 3.0*Q[5, 4]==0.,1.0*Q[4, 6] + 0.5*Q[5, 5]==0.,G[4, 6] + G[5, 5] + G[6, 4]==0.,-6.0*Q[4, 4] + 3.11974486513888*Q[4, 7]==G[1, 4] + G[4, 1],-3.0*Q[4, 5]==G[4, 7] + G[7, 4],3.0*Q[4, 4]==0.,0.5*Q[4, 5]==0.,G[4, 5] + G[5, 4]==0.,G[4, 4]==0]
            constraints += [72.623616*J[0, 0] + 1.0*Q[0, 0] - 1.000001==M[0, 0],72.623616*J[0, 3] + 72.623616*J[3, 0] + 1.0*Q[0, 3] + 1.0*Q[3, 0]==M[0, 3] + M[3, 0],72.623616*J[3, 3] + 1.0*Q[0, 9] + 1.0*Q[3, 3] + 1.0*Q[9, 0]==M[0, 9] + M[3, 3] + M[9, 0],Q[3, 9] + Q[9, 3]==M[3, 9] + M[9, 3],Q[9, 9]==M[9, 9],1.68*J[0, 0] + 72.623616*J[0, 2] + 72.623616*J[2, 0] + 1.0*Q[0, 2] + 1.0*Q[2, 0]==M[0, 2] + M[2, 0],1.68*J[0, 3] + 72.623616*J[2, 3] + 1.68*J[3, 0] + 72.623616*J[3, 2] + 1.0*Q[0, 8] + 1.0*Q[2, 3] + 1.0*Q[3, 2] + 1.0*Q[8, 0]==M[0, 8] + M[2, 3] + M[3, 2] + M[8, 0],1.68*J[3, 3] + 1.0*Q[2, 9] + 1.0*Q[3, 8] + 1.0*Q[8, 3] + 1.0*Q[9, 2]==M[2, 9] + M[3, 8] + M[8, 3] + M[9, 2],Q[8, 9] + Q[9, 8]==M[8, 9] + M[9, 8],1.0*J[0, 0] + 1.68*J[0, 2] + 1.68*J[2, 0] + 72.623616*J[2, 2] + 1.0*Q[0, 6] + 1.0*Q[2, 2] + 1.0*Q[6, 0]==M[0, 6] + M[2, 2] + M[6, 0],1.0*J[0, 3] + 1.68*J[2, 3] + 1.0*J[3, 0] + 1.68*J[3, 2] + 1.0*Q[2, 8] + 1.0*Q[3, 6] + 1.0*Q[6, 3] + 1.0*Q[8, 2]==M[2, 8] + M[3, 6] + M[6, 3] + M[8, 2],1.0*J[3, 3] + 1.0*Q[6, 9] + 1.0*Q[8, 8] + 1.0*Q[9, 6]==M[6, 9] + M[8, 8] + M[9, 6],1.0*J[0, 2] + 1.0*J[2, 0] + 1.68*J[2, 2] + 1.0*Q[2, 6] + 1.0*Q[6, 2]==M[2, 6] + M[6, 2],1.0*J[2, 3] + 1.0*J[3, 2] + 1.0*Q[6, 8] + 1.0*Q[8, 6]==M[6, 8] + M[8, 6],1.0*J[2, 2] + 1.0*Q[6, 6]==M[6, 6],17.008*J[0, 0] + 72.623616*J[0, 1] + 72.623616*J[1, 0] + 1.0*Q[0, 1] + 1.0*Q[1, 0]==M[0, 1] + M[1, 0],17.008*J[0, 3] + 72.623616*J[1, 3] + 17.008*J[3, 0] + 72.623616*J[3, 1] + 1.0*Q[0, 7] + 1.0*Q[1, 3] + 1.0*Q[3, 1] + 1.0*Q[7, 0]==M[0, 7] + M[1, 3] + M[3, 1] + M[7, 0],17.008*J[3, 3] + 1.0*Q[1, 9] + 1.0*Q[3, 7] + 1.0*Q[7, 3] + 1.0*Q[9, 1]==M[1, 9] + M[3, 7] + M[7, 3] + M[9, 1],Q[7, 9] + Q[9, 7]==M[7, 9] + M[9, 7],1.68*J[0, 1] + 17.008*J[0, 2] + 1.68*J[1, 0] + 72.623616*J[1, 2] + 17.008*J[2, 0] + 72.623616*J[2, 1] + 1.0*Q[0, 5] + 1.0*Q[1, 2] + 1.0*Q[2, 1] + 1.0*Q[5, 0]==M[0, 5] + M[1, 2] + M[2, 1] + M[5, 0],1.68*J[1, 3] + 17.008*J[2, 3] + 1.68*J[3, 1] + 17.008*J[3, 2] + 1.0*Q[1, 8] + 1.0*Q[2, 7] + 1.0*Q[3, 5] + 1.0*Q[5, 3] + 1.0*Q[7, 2] + 1.0*Q[8, 1]==M[1, 8] + M[2, 7] + M[3, 5] + M[5, 3] + M[7, 2] + M[8, 1],Q[5, 9] + Q[7, 8] + Q[8, 7] + Q[9, 5]==M[5, 9] + M[7, 8] + M[8, 7] + M[9, 5],1.0*J[0, 1] + 1.0*J[1, 0] + 1.68*J[1, 2] + 1.68*J[2, 1] + 17.008*J[2, 2] + 1.0*Q[1, 6] + 1.0*Q[2, 5] + 1.0*Q[5, 2] + 1.0*Q[6, 1]==M[1, 6] + M[2, 5] + M[5, 2] + M[6, 1],1.0*J[1, 3] + 1.0*J[3, 1] + 1.0*Q[5, 8] + 1.0*Q[6, 7] + 1.0*Q[7, 6] + 1.0*Q[8, 5]==M[5, 8] + M[6, 7] + M[7, 6] + M[8, 5],1.0*J[1, 2] + 1.0*J[2, 1] + 1.0*Q[5, 6] + 1.0*Q[6, 5]==M[5, 6] + M[6, 5],1.0*J[0, 0] + 17.008*J[0, 1] + 17.008*J[1, 0] + 72.623616*J[1, 1] + 1.0*Q[0, 4] + 1.0*Q[1, 1] + 1.0*Q[4, 0]==M[0, 4] + M[1, 1] + M[4, 0],1.0*J[0, 3] + 17.008*J[1, 3] + 1.0*J[3, 0] + 17.008*J[3, 1] + 1.0*Q[1, 7] + 1.0*Q[3, 4] + 1.0*Q[4, 3] + 1.0*Q[7, 1]==M[1, 7] + M[3, 4] + M[4, 3] + M[7, 1],1.0*J[3, 3] + 1.0*Q[4, 9] + 1.0*Q[7, 7] + 1.0*Q[9, 4]==M[4, 9] + M[7, 7] + M[9, 4],1.0*J[0, 2] + 1.68*J[1, 1] + 17.008*J[1, 2] + 1.0*J[2, 0] + 17.008*J[2, 1] + 1.0*Q[1, 5] + 1.0*Q[2, 4] + 1.0*Q[4, 2] + 1.0*Q[5, 1]==M[1, 5] + M[2, 4] + M[4, 2] + M[5, 1],1.0*J[2, 3] + 1.0*J[3, 2] + 1.0*Q[4, 8] + 1.0*Q[5, 7] + 1.0*Q[7, 5] + 1.0*Q[8, 4]==M[4, 8] + M[5, 7] + M[7, 5] + M[8, 4],1.0*J[1, 1] + 1.0*J[2, 2] + 1.0*Q[4, 6] + 1.0*Q[5, 5] + 1.0*Q[6, 4]==M[4, 6] + M[5, 5] + M[6, 4],1.0*J[0, 1] + 1.0*J[1, 0] + 17.008*J[1, 1] + 1.0*Q[1, 4] + 1.0*Q[4, 1]==M[1, 4] + M[4, 1],1.0*J[1, 3] + 1.0*J[3, 1] + 1.0*Q[4, 7] + 1.0*Q[7, 4]==M[4, 7] + M[7, 4],1.0*J[1, 2] + 1.0*J[2, 1] + 1.0*Q[4, 5] + 1.0*Q[5, 4]==M[4, 5] + M[5, 4],1.0*J[1, 1] + 1.0*Q[4, 4]==M[4, 4]]
        
        elif direction == 2:
            constraints += [-3.0*Q[0, 1]==G[0, 0],-3.0*Q[0, 2] - 3.0*Q[0, 7] - 3.0*Q[3, 1]==G[0, 3] + G[3, 0],1.5*Q[0, 1] - 3.0*Q[0, 8] - 3.0*Q[3, 2] - 3.0*Q[3, 7] - 3.0*Q[9, 1]==G[0, 9] + G[3, 3] + G[9, 0],0.5*Q[0, 2] + 1.5*Q[0, 7] + 1.5*Q[3, 1] - 3.0*Q[3, 8] - 3.0*Q[9, 2] - 3.0*Q[9, 7]==G[3, 9] + G[9, 3],0.5*Q[0, 8] + 0.5*Q[3, 2] + 1.5*Q[3, 7] + 1.5*Q[9, 1] - 3.0*Q[9, 8]==G[9, 9],0.5*Q[3, 8] + 0.5*Q[9, 2] + 1.5*Q[9, 7]==0.,0.5*Q[9, 8]==0.,-3.0*Q[0, 5] - 3.0*Q[2, 1]==G[0, 2] + G[2, 0],-6.0*Q[0, 6] - 3.0*Q[2, 2] - 3.0*Q[2, 7] - 3.0*Q[3, 5] - 3.0*Q[8, 1]==G[0, 8] + G[2, 3] + G[3, 2] + G[8, 0],1.5*Q[0, 5] + 1.5*Q[2, 1] - 3.0*Q[2, 8] - 6.0*Q[3, 6] - 3.0*Q[8, 2] - 3.0*Q[8, 7] - 3.0*Q[9, 5]==G[2, 9] + G[3, 8] + G[8, 3] + G[9, 2],1.0*Q[0, 6] + 0.5*Q[2, 2] + 1.5*Q[2, 7] + 1.5*Q[3, 5] + 1.5*Q[8, 1] - 3.0*Q[8, 8] - 6.0*Q[9, 6]==G[8, 9] + G[9, 8],0.5*Q[2, 8] + 1.0*Q[3, 6] + 0.5*Q[8, 2] + 1.5*Q[8, 7] + 1.5*Q[9, 5]==0.,0.5*Q[8, 8] + 1.0*Q[9, 6]==0.,-3.0*Q[2, 5] - 3.0*Q[6, 1]==G[0, 6] + G[2, 2] + G[6, 0],-6.0*Q[2, 6] - 3.0*Q[6, 2] - 3.0*Q[6, 7] - 3.0*Q[8, 5]==G[2, 8] + G[3, 6] + G[6, 3] + G[8, 2],1.5*Q[2, 5] + 1.5*Q[6, 1] - 3.0*Q[6, 8] - 6.0*Q[8, 6]==G[6, 9] + G[8, 8] + G[9, 6],1.0*Q[2, 6] + 0.5*Q[6, 2] + 1.5*Q[6, 7] + 1.5*Q[8, 5]==0.,0.5*Q[6, 8] + 1.0*Q[8, 6]==0.,-3.0*Q[6, 5]==G[2, 6] + G[6, 2],-6.0*Q[6, 6]==G[6, 8] + G[8, 6],1.5*Q[6, 5]==0.,1.0*Q[6, 6]==0.,G[6, 6]==0.,-6.0*Q[0, 4] - 3.0*Q[1, 1]==G[0, 1] + G[1, 0],-3.0*Q[0, 5] - 3.0*Q[1, 2] - 3.0*Q[1, 7] - 6.0*Q[3, 4] - 3.0*Q[7, 1]==G[0, 7] + G[1, 3] + G[3, 1] + G[7, 0],3.0*Q[0, 4] + 1.5*Q[1, 1] - 3.0*Q[1, 8] - 3.0*Q[3, 5] - 3.0*Q[7, 2] - 3.0*Q[7, 7] - 6.0*Q[9, 4]==G[1, 9] + G[3, 7] + G[7, 3] + G[9, 1],0.5*Q[0, 5] + 0.5*Q[1, 2] + 1.5*Q[1, 7] + 3.0*Q[3, 4] + 1.5*Q[7, 1] - 3.0*Q[7, 8] - 3.0*Q[9, 5]==G[7, 9] + G[9, 7],0.5*Q[1, 8] + 0.5*Q[3, 5] + 0.5*Q[7, 2] + 1.5*Q[7, 7] + 3.0*Q[9, 4]==0.,0.5*Q[7, 8] + 0.5*Q[9, 5]==0.,-3.0*Q[1, 5] - 6.0*Q[2, 4] - 3.0*Q[5, 1]==G[0, 5] + G[1, 2] + G[2, 1] + G[5, 0],-6.0*Q[1, 6] - 3.0*Q[2, 5] - 3.0*Q[5, 2] - 3.0*Q[5, 7] - 3.0*Q[7, 5] - 6.0*Q[8, 4]==G[1, 8] + G[2, 7] + G[3, 5] + G[5, 3] + G[7, 2] + G[8, 1],1.5*Q[1, 5] + 3.0*Q[2, 4] + 1.5*Q[5, 1] - 3.0*Q[5, 8] - 6.0*Q[7, 6] - 3.0*Q[8, 5]==G[5, 9] + G[7, 8] + G[8, 7] + G[9, 5],1.0*Q[1, 6] + 0.5*Q[2, 5] + 0.5*Q[5, 2] + 1.5*Q[5, 7] + 1.5*Q[7, 5] + 3.0*Q[8, 4]==0.,0.5*Q[5, 8] + 1.0*Q[7, 6] + 0.5*Q[8, 5]==0.,-3.0*Q[5, 5] - 6.0*Q[6, 4]==G[1, 6] + G[2, 5] + G[5, 2] + G[6, 1],-6.0*Q[5, 6] - 3.0*Q[6, 5]==G[5, 8] + G[6, 7] + G[7, 6] + G[8, 5],1.5*Q[5, 5] + 3.0*Q[6, 4]==0.,1.0*Q[5, 6] + 0.5*Q[6, 5]==0.,G[5, 6] + G[6, 5]==0.,-6.0*Q[1, 4] - 3.0*Q[4, 1]==G[0, 4] + G[1, 1] + G[4, 0],-3.0*Q[1, 5] - 3.0*Q[4, 2] - 3.0*Q[4, 7] - 6.0*Q[7, 4]==G[1, 7] + G[3, 4] + G[4, 3] + G[7, 1],3.0*Q[1, 4] + 1.5*Q[4, 1] - 3.0*Q[4, 8] - 3.0*Q[7, 5]==G[4, 9] + G[7, 7] + G[9, 4],0.5*Q[1, 5] + 0.5*Q[4, 2] + 1.5*Q[4, 7] + 3.0*Q[7, 4]==0.,0.5*Q[4, 8] + 0.5*Q[7, 5]==0.,-3.0*Q[4, 5] - 6.0*Q[5, 4]==G[1, 5] + G[2, 4] + G[4, 2] + G[5, 1],-6.0*Q[4, 6] - 3.0*Q[5, 5]==G[4, 8] + G[5, 7] + G[7, 5] + G[8, 4],1.5*Q[4, 5] + 3.0*Q[5, 4]==0.,1.0*Q[4, 6] + 0.5*Q[5, 5]==0.,G[4, 6] + G[5, 5] + G[6, 4]==0.,-6.0*Q[4, 4]==G[1, 4] + G[4, 1],-3.0*Q[4, 5]==G[4, 7] + G[7, 4],3.0*Q[4, 4]==0.,0.5*Q[4, 5]==0.,G[4, 5] + G[5, 4]==0.,G[4, 4]==0]
            constraints += [72.623616*J[0, 0] + 1.0*Q[0, 0] - 1.000001==M[0, 0],72.623616*J[0, 3] + 72.623616*J[3, 0] + 1.0*Q[0, 3] + 1.0*Q[3, 0]==M[0, 3] + M[3, 0],72.623616*J[3, 3] + 1.0*Q[0, 9] + 1.0*Q[3, 3] + 1.0*Q[9, 0]==M[0, 9] + M[3, 3] + M[9, 0],Q[3, 9] + Q[9, 3]==M[3, 9] + M[9, 3],Q[9, 9]==M[9, 9],1.68*J[0, 0] + 72.623616*J[0, 2] + 72.623616*J[2, 0] + 1.0*Q[0, 2] + 1.0*Q[2, 0]==M[0, 2] + M[2, 0],1.68*J[0, 3] + 72.623616*J[2, 3] + 1.68*J[3, 0] + 72.623616*J[3, 2] + 1.0*Q[0, 8] + 1.0*Q[2, 3] + 1.0*Q[3, 2] + 1.0*Q[8, 0]==M[0, 8] + M[2, 3] + M[3, 2] + M[8, 0],1.68*J[3, 3] + 1.0*Q[2, 9] + 1.0*Q[3, 8] + 1.0*Q[8, 3] + 1.0*Q[9, 2]==M[2, 9] + M[3, 8] + M[8, 3] + M[9, 2],Q[8, 9] + Q[9, 8]==M[8, 9] + M[9, 8],1.0*J[0, 0] + 1.68*J[0, 2] + 1.68*J[2, 0] + 72.623616*J[2, 2] + 1.0*Q[0, 6] + 1.0*Q[2, 2] + 1.0*Q[6, 0]==M[0, 6] + M[2, 2] + M[6, 0],1.0*J[0, 3] + 1.68*J[2, 3] + 1.0*J[3, 0] + 1.68*J[3, 2] + 1.0*Q[2, 8] + 1.0*Q[3, 6] + 1.0*Q[6, 3] + 1.0*Q[8, 2]==M[2, 8] + M[3, 6] + M[6, 3] + M[8, 2],1.0*J[3, 3] + 1.0*Q[6, 9] + 1.0*Q[8, 8] + 1.0*Q[9, 6]==M[6, 9] + M[8, 8] + M[9, 6],1.0*J[0, 2] + 1.0*J[2, 0] + 1.68*J[2, 2] + 1.0*Q[2, 6] + 1.0*Q[6, 2]==M[2, 6] + M[6, 2],1.0*J[2, 3] + 1.0*J[3, 2] + 1.0*Q[6, 8] + 1.0*Q[8, 6]==M[6, 8] + M[8, 6],1.0*J[2, 2] + 1.0*Q[6, 6]==M[6, 6],17.008*J[0, 0] + 72.623616*J[0, 1] + 72.623616*J[1, 0] + 1.0*Q[0, 1] + 1.0*Q[1, 0]==M[0, 1] + M[1, 0],17.008*J[0, 3] + 72.623616*J[1, 3] + 17.008*J[3, 0] + 72.623616*J[3, 1] + 1.0*Q[0, 7] + 1.0*Q[1, 3] + 1.0*Q[3, 1] + 1.0*Q[7, 0]==M[0, 7] + M[1, 3] + M[3, 1] + M[7, 0],17.008*J[3, 3] + 1.0*Q[1, 9] + 1.0*Q[3, 7] + 1.0*Q[7, 3] + 1.0*Q[9, 1]==M[1, 9] + M[3, 7] + M[7, 3] + M[9, 1],Q[7, 9] + Q[9, 7]==M[7, 9] + M[9, 7],1.68*J[0, 1] + 17.008*J[0, 2] + 1.68*J[1, 0] + 72.623616*J[1, 2] + 17.008*J[2, 0] + 72.623616*J[2, 1] + 1.0*Q[0, 5] + 1.0*Q[1, 2] + 1.0*Q[2, 1] + 1.0*Q[5, 0]==M[0, 5] + M[1, 2] + M[2, 1] + M[5, 0],1.68*J[1, 3] + 17.008*J[2, 3] + 1.68*J[3, 1] + 17.008*J[3, 2] + 1.0*Q[1, 8] + 1.0*Q[2, 7] + 1.0*Q[3, 5] + 1.0*Q[5, 3] + 1.0*Q[7, 2] + 1.0*Q[8, 1]==M[1, 8] + M[2, 7] + M[3, 5] + M[5, 3] + M[7, 2] + M[8, 1],Q[5, 9] + Q[7, 8] + Q[8, 7] + Q[9, 5]==M[5, 9] + M[7, 8] + M[8, 7] + M[9, 5],1.0*J[0, 1] + 1.0*J[1, 0] + 1.68*J[1, 2] + 1.68*J[2, 1] + 17.008*J[2, 2] + 1.0*Q[1, 6] + 1.0*Q[2, 5] + 1.0*Q[5, 2] + 1.0*Q[6, 1]==M[1, 6] + M[2, 5] + M[5, 2] + M[6, 1],1.0*J[1, 3] + 1.0*J[3, 1] + 1.0*Q[5, 8] + 1.0*Q[6, 7] + 1.0*Q[7, 6] + 1.0*Q[8, 5]==M[5, 8] + M[6, 7] + M[7, 6] + M[8, 5],1.0*J[1, 2] + 1.0*J[2, 1] + 1.0*Q[5, 6] + 1.0*Q[6, 5]==M[5, 6] + M[6, 5],1.0*J[0, 0] + 17.008*J[0, 1] + 17.008*J[1, 0] + 72.623616*J[1, 1] + 1.0*Q[0, 4] + 1.0*Q[1, 1] + 1.0*Q[4, 0]==M[0, 4] + M[1, 1] + M[4, 0],1.0*J[0, 3] + 17.008*J[1, 3] + 1.0*J[3, 0] + 17.008*J[3, 1] + 1.0*Q[1, 7] + 1.0*Q[3, 4] + 1.0*Q[4, 3] + 1.0*Q[7, 1]==M[1, 7] + M[3, 4] + M[4, 3] + M[7, 1],1.0*J[3, 3] + 1.0*Q[4, 9] + 1.0*Q[7, 7] + 1.0*Q[9, 4]==M[4, 9] + M[7, 7] + M[9, 4],1.0*J[0, 2] + 1.68*J[1, 1] + 17.008*J[1, 2] + 1.0*J[2, 0] + 17.008*J[2, 1] + 1.0*Q[1, 5] + 1.0*Q[2, 4] + 1.0*Q[4, 2] + 1.0*Q[5, 1]==M[1, 5] + M[2, 4] + M[4, 2] + M[5, 1],1.0*J[2, 3] + 1.0*J[3, 2] + 1.0*Q[4, 8] + 1.0*Q[5, 7] + 1.0*Q[7, 5] + 1.0*Q[8, 4]==M[4, 8] + M[5, 7] + M[7, 5] + M[8, 4],1.0*J[1, 1] + 1.0*J[2, 2] + 1.0*Q[4, 6] + 1.0*Q[5, 5] + 1.0*Q[6, 4]==M[4, 6] + M[5, 5] + M[6, 4],1.0*J[0, 1] + 1.0*J[1, 0] + 17.008*J[1, 1] + 1.0*Q[1, 4] + 1.0*Q[4, 1]==M[1, 4] + M[4, 1],1.0*J[1, 3] + 1.0*J[3, 1] + 1.0*Q[4, 7] + 1.0*Q[7, 4]==M[4, 7] + M[7, 4],1.0*J[1, 2] + 1.0*J[2, 1] + 1.0*Q[4, 5] + 1.0*Q[5, 4]==M[4, 5] + M[5, 4],1.0*J[1, 1] + 1.0*Q[4, 4]==M[4, 4]]

        elif direction == 3:
            constraints += [-3.0*Q[0, 1] - 3.11974486513888*Q[0, 3]==G[0, 0],-3.0*Q[0, 2] - 3.0*Q[0, 7] - 6.23948973027775*Q[0, 9] - 3.0*Q[3, 1] - 3.11974486513888*Q[3, 3]==G[0, 3] + G[3, 0],1.5*Q[0, 1] - 3.0*Q[0, 8] - 3.0*Q[3, 2] - 3.0*Q[3, 7] - 6.23948973027775*Q[3, 9] - 3.0*Q[9, 1] - 3.11974486513888*Q[9, 3]==G[0, 9] + G[3, 3] + G[9, 0],0.5*Q[0, 2] + 1.5*Q[0, 7] + 1.5*Q[3, 1] - 3.0*Q[3, 8] - 3.0*Q[9, 2] - 3.0*Q[9, 7] - 6.23948973027775*Q[9, 9]==G[3, 9] + G[9, 3],0.5*Q[0, 8] + 0.5*Q[3, 2] + 1.5*Q[3, 7] + 1.5*Q[9, 1] - 3.0*Q[9, 8]==G[9, 9],0.5*Q[3, 8] + 0.5*Q[9, 2] + 1.5*Q[9, 7]==0.,0.5*Q[9, 8]==0.,-3.0*Q[0, 5] - 3.11974486513888*Q[0, 8] - 3.0*Q[2, 1] - 3.11974486513888*Q[2, 3]==G[0, 2] + G[2, 0],-6.0*Q[0, 6] - 3.0*Q[2, 2] - 3.0*Q[2, 7] - 6.23948973027775*Q[2, 9] - 3.0*Q[3, 5] - 3.11974486513888*Q[3, 8] - 3.0*Q[8, 1] - 3.11974486513888*Q[8, 3]==G[0, 8] + G[2, 3] + G[3, 2] + G[8, 0],1.5*Q[0, 5] + 1.5*Q[2, 1] - 3.0*Q[2, 8] - 6.0*Q[3, 6] - 3.0*Q[8, 2] - 3.0*Q[8, 7] - 6.23948973027775*Q[8, 9] - 3.0*Q[9, 5] - 3.11974486513888*Q[9, 8]==G[2, 9] + G[3, 8] + G[8, 3] + G[9, 2],1.0*Q[0, 6] + 0.5*Q[2, 2] + 1.5*Q[2, 7] + 1.5*Q[3, 5] + 1.5*Q[8, 1] - 3.0*Q[8, 8] - 6.0*Q[9, 6]==G[8, 9] + G[9, 8],0.5*Q[2, 8] + 1.0*Q[3, 6] + 0.5*Q[8, 2] + 1.5*Q[8, 7] + 1.5*Q[9, 5]==0.,0.5*Q[8, 8] + 1.0*Q[9, 6]==0.,-3.0*Q[2, 5] - 3.11974486513888*Q[2, 8] - 3.0*Q[6, 1] - 3.11974486513888*Q[6, 3]==G[0, 6] + G[2, 2] + G[6, 0],-6.0*Q[2, 6] - 3.0*Q[6, 2] - 3.0*Q[6, 7] - 6.23948973027775*Q[6, 9] - 3.0*Q[8, 5] - 3.11974486513888*Q[8, 8]==G[2, 8] + G[3, 6] + G[6, 3] + G[8, 2],1.5*Q[2, 5] + 1.5*Q[6, 1] - 3.0*Q[6, 8] - 6.0*Q[8, 6]==G[6, 9] + G[8, 8] + G[9, 6],1.0*Q[2, 6] + 0.5*Q[6, 2] + 1.5*Q[6, 7] + 1.5*Q[8, 5]==0.,0.5*Q[6, 8] + 1.0*Q[8, 6]==0.,-3.0*Q[6, 5] - 3.11974486513888*Q[6, 8]==G[2, 6] + G[6, 2],-6.0*Q[6, 6]==G[6, 8] + G[8, 6],1.5*Q[6, 5]==0.,1.0*Q[6, 6]==0.,G[6, 6]==0.,-6.0*Q[0, 4] - 3.11974486513888*Q[0, 7] - 3.0*Q[1, 1] - 3.11974486513888*Q[1, 3]==G[0, 1] + G[1, 0],-3.0*Q[0, 5] - 3.0*Q[1, 2] - 3.0*Q[1, 7] - 6.23948973027775*Q[1, 9] - 6.0*Q[3, 4] - 3.11974486513888*Q[3, 7] - 3.0*Q[7, 1] - 3.11974486513888*Q[7, 3]==G[0, 7] + G[1, 3] + G[3, 1] + G[7, 0],3.0*Q[0, 4] + 1.5*Q[1, 1] - 3.0*Q[1, 8] - 3.0*Q[3, 5] - 3.0*Q[7, 2] - 3.0*Q[7, 7] - 6.23948973027775*Q[7, 9] - 6.0*Q[9, 4] - 3.11974486513888*Q[9, 7]==G[1, 9] + G[3, 7] + G[7, 3] + G[9, 1],0.5*Q[0, 5] + 0.5*Q[1, 2] + 1.5*Q[1, 7] + 3.0*Q[3, 4] + 1.5*Q[7, 1] - 3.0*Q[7, 8] - 3.0*Q[9, 5]==G[7, 9] + G[9, 7],0.5*Q[1, 8] + 0.5*Q[3, 5] + 0.5*Q[7, 2] + 1.5*Q[7, 7] + 3.0*Q[9, 4]==0.,0.5*Q[7, 8] + 0.5*Q[9, 5]==0.,-3.0*Q[1, 5] - 3.11974486513888*Q[1, 8] - 6.0*Q[2, 4] - 3.11974486513888*Q[2, 7] - 3.0*Q[5, 1] - 3.11974486513888*Q[5, 3]==G[0, 5] + G[1, 2] + G[2, 1] + G[5, 0],-6.0*Q[1, 6] - 3.0*Q[2, 5] - 3.0*Q[5, 2] - 3.0*Q[5, 7] - 6.23948973027775*Q[5, 9] - 3.0*Q[7, 5] - 3.11974486513888*Q[7, 8] - 6.0*Q[8, 4] - 3.11974486513888*Q[8, 7]==G[1, 8] + G[2, 7] + G[3, 5] + G[5, 3] + G[7, 2] + G[8, 1],1.5*Q[1, 5] + 3.0*Q[2, 4] + 1.5*Q[5, 1] - 3.0*Q[5, 8] - 6.0*Q[7, 6] - 3.0*Q[8, 5]==G[5, 9] + G[7, 8] + G[8, 7] + G[9, 5],1.0*Q[1, 6] + 0.5*Q[2, 5] + 0.5*Q[5, 2] + 1.5*Q[5, 7] + 1.5*Q[7, 5] + 3.0*Q[8, 4]==0.,0.5*Q[5, 8] + 1.0*Q[7, 6] + 0.5*Q[8, 5]==0.,-3.0*Q[5, 5] - 3.11974486513888*Q[5, 8] - 6.0*Q[6, 4] - 3.11974486513888*Q[6, 7]==G[1, 6] + G[2, 5] + G[5, 2] + G[6, 1],-6.0*Q[5, 6] - 3.0*Q[6, 5]==G[5, 8] + G[6, 7] + G[7, 6] + G[8, 5],1.5*Q[5, 5] + 3.0*Q[6, 4]==0.,1.0*Q[5, 6] + 0.5*Q[6, 5]==0.,G[5, 6] + G[6, 5]==0.,-6.0*Q[1, 4] - 3.11974486513888*Q[1, 7] - 3.0*Q[4, 1] - 3.11974486513888*Q[4, 3]==G[0, 4] + G[1, 1] + G[4, 0],-3.0*Q[1, 5] - 3.0*Q[4, 2] - 3.0*Q[4, 7] - 6.23948973027775*Q[4, 9] - 6.0*Q[7, 4] - 3.11974486513888*Q[7, 7]==G[1, 7] + G[3, 4] + G[4, 3] + G[7, 1],3.0*Q[1, 4] + 1.5*Q[4, 1] - 3.0*Q[4, 8] - 3.0*Q[7, 5]==G[4, 9] + G[7, 7] + G[9, 4],0.5*Q[1, 5] + 0.5*Q[4, 2] + 1.5*Q[4, 7] + 3.0*Q[7, 4]==0.,0.5*Q[4, 8] + 0.5*Q[7, 5]==0.,-3.0*Q[4, 5] - 3.11974486513888*Q[4, 8] - 6.0*Q[5, 4] - 3.11974486513888*Q[5, 7]==G[1, 5] + G[2, 4] + G[4, 2] + G[5, 1],-6.0*Q[4, 6] - 3.0*Q[5, 5]==G[4, 8] + G[5, 7] + G[7, 5] + G[8, 4],1.5*Q[4, 5] + 3.0*Q[5, 4]==0.,1.0*Q[4, 6] + 0.5*Q[5, 5]==0.,G[4, 6] + G[5, 5] + G[6, 4]==0.,-6.0*Q[4, 4] - 3.11974486513888*Q[4, 7]==G[1, 4] + G[4, 1],-3.0*Q[4, 5]==G[4, 7] + G[7, 4],3.0*Q[4, 4]==0.,0.5*Q[4, 5]==0.,G[4, 5] + G[5, 4]==0.,G[4, 4]==0]
            constraints += [72.623616*J[0, 0] + 1.0*Q[0, 0] - 1.000001==M[0, 0],72.623616*J[0, 3] + 72.623616*J[3, 0] + 1.0*Q[0, 3] + 1.0*Q[3, 0]==M[0, 3] + M[3, 0],72.623616*J[3, 3] + 1.0*Q[0, 9] + 1.0*Q[3, 3] + 1.0*Q[9, 0]==M[0, 9] + M[3, 3] + M[9, 0],Q[3, 9] + Q[9, 3]==M[3, 9] + M[9, 3],Q[9, 9]==M[9, 9],1.68*J[0, 0] + 72.623616*J[0, 2] + 72.623616*J[2, 0] + 1.0*Q[0, 2] + 1.0*Q[2, 0]==M[0, 2] + M[2, 0],1.68*J[0, 3] + 72.623616*J[2, 3] + 1.68*J[3, 0] + 72.623616*J[3, 2] + 1.0*Q[0, 8] + 1.0*Q[2, 3] + 1.0*Q[3, 2] + 1.0*Q[8, 0]==M[0, 8] + M[2, 3] + M[3, 2] + M[8, 0],1.68*J[3, 3] + 1.0*Q[2, 9] + 1.0*Q[3, 8] + 1.0*Q[8, 3] + 1.0*Q[9, 2]==M[2, 9] + M[3, 8] + M[8, 3] + M[9, 2],Q[8, 9] + Q[9, 8]==M[8, 9] + M[9, 8],1.0*J[0, 0] + 1.68*J[0, 2] + 1.68*J[2, 0] + 72.623616*J[2, 2] + 1.0*Q[0, 6] + 1.0*Q[2, 2] + 1.0*Q[6, 0]==M[0, 6] + M[2, 2] + M[6, 0],1.0*J[0, 3] + 1.68*J[2, 3] + 1.0*J[3, 0] + 1.68*J[3, 2] + 1.0*Q[2, 8] + 1.0*Q[3, 6] + 1.0*Q[6, 3] + 1.0*Q[8, 2]==M[2, 8] + M[3, 6] + M[6, 3] + M[8, 2],1.0*J[3, 3] + 1.0*Q[6, 9] + 1.0*Q[8, 8] + 1.0*Q[9, 6]==M[6, 9] + M[8, 8] + M[9, 6],1.0*J[0, 2] + 1.0*J[2, 0] + 1.68*J[2, 2] + 1.0*Q[2, 6] + 1.0*Q[6, 2]==M[2, 6] + M[6, 2],1.0*J[2, 3] + 1.0*J[3, 2] + 1.0*Q[6, 8] + 1.0*Q[8, 6]==M[6, 8] + M[8, 6],1.0*J[2, 2] + 1.0*Q[6, 6]==M[6, 6],17.008*J[0, 0] + 72.623616*J[0, 1] + 72.623616*J[1, 0] + 1.0*Q[0, 1] + 1.0*Q[1, 0]==M[0, 1] + M[1, 0],17.008*J[0, 3] + 72.623616*J[1, 3] + 17.008*J[3, 0] + 72.623616*J[3, 1] + 1.0*Q[0, 7] + 1.0*Q[1, 3] + 1.0*Q[3, 1] + 1.0*Q[7, 0]==M[0, 7] + M[1, 3] + M[3, 1] + M[7, 0],17.008*J[3, 3] + 1.0*Q[1, 9] + 1.0*Q[3, 7] + 1.0*Q[7, 3] + 1.0*Q[9, 1]==M[1, 9] + M[3, 7] + M[7, 3] + M[9, 1],Q[7, 9] + Q[9, 7]==M[7, 9] + M[9, 7],1.68*J[0, 1] + 17.008*J[0, 2] + 1.68*J[1, 0] + 72.623616*J[1, 2] + 17.008*J[2, 0] + 72.623616*J[2, 1] + 1.0*Q[0, 5] + 1.0*Q[1, 2] + 1.0*Q[2, 1] + 1.0*Q[5, 0]==M[0, 5] + M[1, 2] + M[2, 1] + M[5, 0],1.68*J[1, 3] + 17.008*J[2, 3] + 1.68*J[3, 1] + 17.008*J[3, 2] + 1.0*Q[1, 8] + 1.0*Q[2, 7] + 1.0*Q[3, 5] + 1.0*Q[5, 3] + 1.0*Q[7, 2] + 1.0*Q[8, 1]==M[1, 8] + M[2, 7] + M[3, 5] + M[5, 3] + M[7, 2] + M[8, 1],Q[5, 9] + Q[7, 8] + Q[8, 7] + Q[9, 5]==M[5, 9] + M[7, 8] + M[8, 7] + M[9, 5],1.0*J[0, 1] + 1.0*J[1, 0] + 1.68*J[1, 2] + 1.68*J[2, 1] + 17.008*J[2, 2] + 1.0*Q[1, 6] + 1.0*Q[2, 5] + 1.0*Q[5, 2] + 1.0*Q[6, 1]==M[1, 6] + M[2, 5] + M[5, 2] + M[6, 1],1.0*J[1, 3] + 1.0*J[3, 1] + 1.0*Q[5, 8] + 1.0*Q[6, 7] + 1.0*Q[7, 6] + 1.0*Q[8, 5]==M[5, 8] + M[6, 7] + M[7, 6] + M[8, 5],1.0*J[1, 2] + 1.0*J[2, 1] + 1.0*Q[5, 6] + 1.0*Q[6, 5]==M[5, 6] + M[6, 5],1.0*J[0, 0] + 17.008*J[0, 1] + 17.008*J[1, 0] + 72.623616*J[1, 1] + 1.0*Q[0, 4] + 1.0*Q[1, 1] + 1.0*Q[4, 0]==M[0, 4] + M[1, 1] + M[4, 0],1.0*J[0, 3] + 17.008*J[1, 3] + 1.0*J[3, 0] + 17.008*J[3, 1] + 1.0*Q[1, 7] + 1.0*Q[3, 4] + 1.0*Q[4, 3] + 1.0*Q[7, 1]==M[1, 7] + M[3, 4] + M[4, 3] + M[7, 1],1.0*J[3, 3] + 1.0*Q[4, 9] + 1.0*Q[7, 7] + 1.0*Q[9, 4]==M[4, 9] + M[7, 7] + M[9, 4],1.0*J[0, 2] + 1.68*J[1, 1] + 17.008*J[1, 2] + 1.0*J[2, 0] + 17.008*J[2, 1] + 1.0*Q[1, 5] + 1.0*Q[2, 4] + 1.0*Q[4, 2] + 1.0*Q[5, 1]==M[1, 5] + M[2, 4] + M[4, 2] + M[5, 1],1.0*J[2, 3] + 1.0*J[3, 2] + 1.0*Q[4, 8] + 1.0*Q[5, 7] + 1.0*Q[7, 5] + 1.0*Q[8, 4]==M[4, 8] + M[5, 7] + M[7, 5] + M[8, 4],1.0*J[1, 1] + 1.0*J[2, 2] + 1.0*Q[4, 6] + 1.0*Q[5, 5] + 1.0*Q[6, 4]==M[4, 6] + M[5, 5] + M[6, 4],1.0*J[0, 1] + 1.0*J[1, 0] + 17.008*J[1, 1] + 1.0*Q[1, 4] + 1.0*Q[4, 1]==M[1, 4] + M[4, 1],1.0*J[1, 3] + 1.0*J[3, 1] + 1.0*Q[4, 7] + 1.0*Q[7, 4]==M[4, 7] + M[7, 4],1.0*J[1, 2] + 1.0*J[2, 1] + 1.0*Q[4, 5] + 1.0*Q[5, 4]==M[4, 5] + M[5, 4],1.0*J[1, 1] + 1.0*Q[4, 4]==M[4, 4]]
        prob = cp.Problem(cp.Minimize(1),constraints)
        prob.solve(verbose=False,warm_start=True)
    
        status = prob.status
        solve_time = prob.solver_stats.solve_time

        return status,solve_time




    def SOS_barrier(self,car_pos_x,car_pos_y,yaw_z):
        ## find close obstacle index 0 1
        dist1 = ((car_pos_x - self.obstacle_data[0][0])**2 + (car_pos_y - self.obstacle_data[0][1])**2)**(1/2)
        dist2 = ((car_pos_x - self.obstacle_data[1][0])**2 + (car_pos_y - self.obstacle_data[1][1])**2)**(1/2)


        if dist1 < self.detect_radius and dist2 > dist1:
            self.close_index = 0
            self.time_to_switch = False
        elif dist2 < self.detect_radius and dist1 > dist2:
            self.close_index = 1
            self.time_to_switch = False
        else:
            self.close_index = 5

        #print("old index: ",self.old_priority_index)
        #print("close index")
        #print(self.close_index)
        #print(self.obstacle_data[0][1])

        ## find priority_index
        priority_index = self.high_level.max_index

        if self.old_priority_index != 5 and (self.old_priority_index != priority_index):
            self.time_to_switch = True

        ## norm case
        if self.close_index == 5 or self.time_to_switch:
            if priority_index == 1:
                self.go_straight = False
                self.slight_right = True
                self.slight_left = False
            elif priority_index == 2:
                self.go_straight = True
                self.slight_right = False
                self.slight_left = False
            elif priority_index == 3:
                self.go_straight = False
                self.slight_right = False
                self.slight_left = True

        self.old_priority_index = self.high_level.max_index


        ##########################################################################################
        ## car close to first obstacle
        if self.close_index == 0 and self.primal_available and self.obstacle1_high_once == False:
            #print("!!!")
            ## p_d2 -20pi/180
            if priority_index == 1:
                ## V_Vdot and obstacle SOS
                status,solve_time = self.solve_obstacle_1(car_pos_x,car_pos_y,yaw_z,1)
                
                print(solve_time)
                if solve_time < 50:
                    print("-20pi/180 steering control applied")
                    self.go_straight = False
                    self.slight_right = True
                    self.slight_left = False

                else:
                    print("index 1 optional steer changed to true")
                    self.primal_available = False
                    self.obstacle1_high_once = True

            ## p_d3 0
            elif priority_index == 2:
                status,solve_time = self.solve_obstacle_1(car_pos_x,car_pos_y,yaw_z,2)
                print(solve_time)
                if solve_time < 50.0:
                    print("0 steering control applied")
                    self.go_straight = True
                    self.slight_right = False
                    self.slight_left = False
                    #self.new_priority_available = True

                else:
                    print("index 2 optional steer changed to true")
                    self.primal_available = False
                    self.obstacle1_high_once = True

                
            ## p_d4 20pi/180
            elif priority_index == 3:
                status,solve_time = self.solve_obstacle_1(car_pos_x,car_pos_y,yaw_z,3)
                #self.obstacle1_high_once = True
                print(solve_time)
                if solve_time < 50.0:
                    print("index 3 20pi/180 steering control applied")
                    self.go_straight = False
                    self.slight_left = True
                    self.slight_right = False
                    #self.new_priority_available = True
                    
                else:
                    self.primal_available = False
                    self.obstacle1_high_once = True
                    print("index 3 optional steer changed to true")



        # if not, solve the track-collision-free control and apply
        if not self.primal_available and self.close_index == 0 and self.obstacle1_low_once == False:
            for i in range(len(self.high_level.non_collision_index)):
                num = self.high_level.non_collision_index[i]
                ## exclude priority index
                if not num == priority_index:
                    if num == 1:
                        status,solve_time = self.solve_obstacle_1(car_pos_x,car_pos_y,yaw_z,1)
                        self.obstacle1_low_once = True
                        print("new solve time")
                        print(solve_time)
                        #if solve_time < 100:
                        self.go_straight = False
                        self.slight_right = True
                        self.slight_left = False
                        self.primal_available = True

        ##########################################################################################
        ## car close to second obstacle
        if self.close_index == 1 and self.primal_available and self.obstacle2_high_once == False:
            #print("!!!")
            ## p_d2 -20pi/180
            if priority_index == 1:
                ## V_Vdot and obstacle SOS
                status,solve_time = self.solve_obstacle_2(car_pos_x,car_pos_y,yaw_z,1)
                
                print(solve_time)
                if solve_time < 50:
                    print("-20pi/180 steering control applied")
                    self.go_straight = False
                    self.slight_right = True
                    self.slight_left = False

                else:
                    print("index 1 optional steer changed to true")
                    self.primal_available = False
                    self.obstacle2_high_once = True

            ## p_d3 0
            elif priority_index == 2:
                status,solve_time = self.solve_obstacle_2(car_pos_x,car_pos_y,yaw_z,2)
                print(solve_time)
                if solve_time < 50.0:
                    print("0 steering control applied")
                    self.go_straight = True
                    self.slight_right = False
                    self.slight_left = False
                    #self.new_priority_available = True

                else:
                    print("index 2 optional steer changed to true")
                    self.primal_available = False
                    self.obstacle2_high_once = True

                
            ## p_d4 20pi/180
            elif priority_index == 3:
                status,solve_time = self.solve_obstacle_2(car_pos_x,car_pos_y,yaw_z,3)
                #self.obstacle1_high_once = True
                print(solve_time)
                if solve_time < 50.0:
                    print("index 3 20pi/180 steering control applied")
                    self.go_straight = False
                    self.slight_left = True
                    self.slight_right = False
                    #self.new_priority_available = True
                    
                else:
                    self.primal_available = False
                    self.obstacle2_high_once = True
                    print("index 3 optional steer changed to true")


        # if not, solve the track-collision-free control and apply
        if not self.primal_available and self.close_index == 1 and self.obstacle2_low_once == False:
            for i in range(len(self.high_level.non_collision_index)):
                num = self.high_level.non_collision_index[i]
                ## exclude priority index
                if not num == priority_index:
                    if num == 3:
                        status,solve_time = self.solve_obstacle_2(car_pos_x,car_pos_y,yaw_z,3)
                        self.obstacle2_low_once = True
                        print("new solve time for obstacle 2")
                        print(solve_time)
                        #if solve_time < 100:
                        self.go_straight = False
                        self.slight_right = False
                        self.slight_left = True
                        self.primal_available = True

        ############################################################################################



    def ApplyControl(self,odom_msg):
        ## apply control from solution of lower level

        if self.go_straight == True:
            #print("here 1")
            ack_msg = AckermannDriveStamped()
            ack_msg.drive.steering_angle_velocity = 1.0
            speed = 0.6
            steer = 0
            ack_msg.drive.speed = speed
            ack_msg.drive.steering_angle = steer
            self.drive_control_pub.publish(ack_msg)

        elif self.slight_right == True:
            #print("here 2")
            ack_msg = AckermannDriveStamped()
            ack_msg.drive.steering_angle_velocity = 1.0
            speed = 1.0
            steer = -20*np.pi/180
            ack_msg.drive.speed = speed
            ack_msg.drive.steering_angle = steer
            self.drive_control_pub.publish(ack_msg)

        elif self.slight_left == True:
            #print("here 3")
            ack_msg = AckermannDriveStamped()
            ack_msg.drive.steering_angle_velocity = 1.0
            speed = 1.0
            steer = 20*np.pi/180
            ack_msg.drive.speed = speed
            ack_msg.drive.steering_angle = steer
            self.drive_control_pub.publish(ack_msg)
        #else:
        #    #print("here 4")
        #    ack_msg = AckermannDriveStamped()
        #    ack_msg.drive.steering_angle_velocity = 10.0
        #    speed = 0.0
        #    steer = 20*np.pi/180
        #    ack_msg.drive.speed = speed
        #    ack_msg.drive.steering_angle = steer
        #    self.drive_control_pub.publish(ack_msg)




def main():
    rospy.init_node('Barrier_control',anonymous=True)
    BC = Barrier_control()
    rospy.spin()
if __name__ == '__main__':
    main()







